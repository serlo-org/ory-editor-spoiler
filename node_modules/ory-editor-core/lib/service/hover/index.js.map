{"version":3,"sources":["../../../src/service/hover/index.js"],"names":["classes","NO","C1","C2","C3","C4","AH","AA","BH","BA","LH","LA","RH","RA","IL","IR","c","defaultMatrices","getRoomScale","room","matrix","rows","length","cells","scalingX","width","scalingY","height","x","y","getMouseHoverCell","mouse","scale","cell","Math","floor","row","last","computeHover","item","hover","actions","m","callbacks","hoverCell","error","all","id","ctx","position","size","relativeMousePosition","round","computeLevel","levels","spare","steps","current","i","push","computeHorizontal","level","inv","node","at","inline","computeVertical","getDropLevel","defaultCallbacks","clear","leftOf","above","rawNode","rightOf","below","left","right","inlineLeft","hasInlineNeighbour","content","plugin","isInlineable","inlineRight","HoverService","matrices","use"],"mappings":";;;;;;;;;;;;;AACA;;;;AAIA;;;;;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BO,IAAMA,4BAAqC;AAChDC,MAAI,CAD4C;;AAGhDC,MAAI,EAH4C;AAIhDC,MAAI,EAJ4C;AAKhDC,MAAI,EAL4C;AAMhDC,MAAI,EAN4C;;AAQhDC,MAAI,GAR4C;AAShDC,MAAI,GAT4C;;AAWhDC,MAAI,GAX4C;AAYhDC,MAAI,GAZ4C;;AAchDC,MAAI,GAd4C;AAehDC,MAAI,GAf4C;;AAiBhDC,MAAI,GAjB4C;AAkBhDC,MAAI,GAlB4C;;AAoBhDC,MAAI,GApB4C;AAqBhDC,MAAI;AArB4C,CAA3C;;AAwBP,IAAMC,IAAIhB,OAAV;;AAEA;;;;;AAKO,IAAMiB,4CAA8B;AACzC,SAAO,CACL,CAACD,EAAEd,EAAH,EAAOc,EAAET,EAAT,EAAaS,EAAET,EAAf,EAAmBS,EAAET,EAArB,EAAyBS,EAAET,EAA3B,EAA+BS,EAAEb,EAAjC,CADK,EAEL,CAACa,EAAEL,EAAH,EAAOK,EAAEF,EAAT,EAAaE,EAAEV,EAAf,EAAmBU,EAAEV,EAArB,EAAyBU,EAAED,EAA3B,EAA+BC,EAAEH,EAAjC,CAFK,EAGL,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEf,EAAf,EAAmBe,EAAEf,EAArB,EAAyBe,EAAEJ,EAA3B,EAA+BI,EAAEH,EAAjC,CAHK,EAIL,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEf,EAAf,EAAmBe,EAAEf,EAArB,EAAyBe,EAAEJ,EAA3B,EAA+BI,EAAEH,EAAjC,CAJK,EAKL,CAACG,EAAEL,EAAH,EAAOK,EAAEX,EAAT,EAAaW,EAAER,EAAf,EAAmBQ,EAAER,EAArB,EAAyBQ,EAAEZ,EAA3B,EAA+BY,EAAEH,EAAjC,CALK,EAML,CAACG,EAAEX,EAAH,EAAOW,EAAEP,EAAT,EAAaO,EAAEP,EAAf,EAAmBO,EAAEP,EAArB,EAAyBO,EAAEP,EAA3B,EAA+BO,EAAEZ,EAAjC,CANK,CADkC;AASzC,WAAS,CACP,CAACY,EAAEd,EAAH,EAAOc,EAAET,EAAT,EAAaS,EAAET,EAAf,EAAmBS,EAAET,EAArB,EAAyBS,EAAET,EAA3B,EAA+BS,EAAET,EAAjC,EAAqCS,EAAET,EAAvC,EAA2CS,EAAET,EAA7C,EAAiDS,EAAET,EAAnD,EAAuDS,EAAEb,EAAzD,CADO,EAEP,CAACa,EAAEL,EAAH,EAAOK,EAAEF,EAAT,EAAaE,EAAEF,EAAf,EAAmBE,EAAEF,EAArB,EAAyBE,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAED,EAAvC,EAA2CC,EAAED,EAA7C,EAAiDC,EAAED,EAAnD,EAAuDC,EAAEH,EAAzD,CAFO,EAGP,CAACG,EAAEL,EAAH,EAAOK,EAAEF,EAAT,EAAaE,EAAEF,EAAf,EAAmBE,EAAEF,EAArB,EAAyBE,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAED,EAAvC,EAA2CC,EAAED,EAA7C,EAAiDC,EAAED,EAAnD,EAAuDC,EAAEH,EAAzD,CAHO,EAIP,CAACG,EAAEL,EAAH,EAAOK,EAAEF,EAAT,EAAaE,EAAEF,EAAf,EAAmBE,EAAEF,EAArB,EAAyBE,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAED,EAAvC,EAA2CC,EAAED,EAA7C,EAAiDC,EAAED,EAAnD,EAAuDC,EAAEH,EAAzD,CAJO,EAKP,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEN,EAArB,EAAyBM,EAAEd,EAA3B,EAA+Bc,EAAEb,EAAjC,EAAqCa,EAAEJ,EAAvC,EAA2CI,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CALO,EAMP,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEN,EAArB,EAAyBM,EAAEX,EAA3B,EAA+BW,EAAEZ,EAAjC,EAAqCY,EAAEJ,EAAvC,EAA2CI,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CANO,EAOP,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEX,EAArB,EAAyBW,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAEZ,EAAvC,EAA2CY,EAAED,EAA7C,EAAiDC,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CAPO,EAQP,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEX,EAAf,EAAmBW,EAAER,EAArB,EAAyBQ,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAER,EAAvC,EAA2CQ,EAAEZ,EAA7C,EAAiDY,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CARO,EASP,CAACG,EAAEL,EAAH,EAAOK,EAAEX,EAAT,EAAaW,EAAER,EAAf,EAAmBQ,EAAER,EAArB,EAAyBQ,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAER,EAAvC,EAA2CQ,EAAER,EAA7C,EAAiDQ,EAAEZ,EAAnD,EAAuDY,EAAEH,EAAzD,CATO,EAUP,CAACG,EAAEX,EAAH,EAAOW,EAAEP,EAAT,EAAaO,EAAEP,EAAf,EAAmBO,EAAEP,EAArB,EAAyBO,EAAEP,EAA3B,EAA+BO,EAAEP,EAAjC,EAAqCO,EAAEP,EAAvC,EAA2CO,EAAEP,EAA7C,EAAiDO,EAAEP,EAAnD,EAAuDO,EAAEZ,EAAzD,CAVO,CATgC;AAqBzC,qBAAmB,CACjB,CAACY,EAAEd,EAAH,EAAOc,EAAET,EAAT,EAAaS,EAAET,EAAf,EAAmBS,EAAET,EAArB,EAAyBS,EAAET,EAA3B,EAA+BS,EAAET,EAAjC,EAAqCS,EAAET,EAAvC,EAA2CS,EAAET,EAA7C,EAAiDS,EAAET,EAAnD,EAAuDS,EAAEb,EAAzD,CADiB,EAEjB,CAACa,EAAEL,EAAH,EAAOK,EAAEd,EAAT,EAAac,EAAEV,EAAf,EAAmBU,EAAEV,EAArB,EAAyBU,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAEV,EAAvC,EAA2CU,EAAEV,EAA7C,EAAiDU,EAAEb,EAAnD,EAAuDa,EAAEH,EAAzD,CAFiB,EAGjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEd,EAAf,EAAmBc,EAAEV,EAArB,EAAyBU,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAEV,EAAvC,EAA2CU,EAAEb,EAA7C,EAAiDa,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CAHiB,EAIjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEd,EAArB,EAAyBc,EAAEV,EAA3B,EAA+BU,EAAEV,EAAjC,EAAqCU,EAAEb,EAAvC,EAA2Ca,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CAJiB,EAKjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEN,EAArB,EAAyBM,EAAEd,EAA3B,EAA+Bc,EAAEb,EAAjC,EAAqCa,EAAEJ,EAAvC,EAA2CI,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CALiB,EAMjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEN,EAArB,EAAyBM,EAAEX,EAA3B,EAA+BW,EAAEZ,EAAjC,EAAqCY,EAAEJ,EAAvC,EAA2CI,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CANiB,EAOjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEN,EAAf,EAAmBM,EAAEX,EAArB,EAAyBW,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAEZ,EAAvC,EAA2CY,EAAEJ,EAA7C,EAAiDI,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CAPiB,EAQjB,CAACG,EAAEL,EAAH,EAAOK,EAAEN,EAAT,EAAaM,EAAEX,EAAf,EAAmBW,EAAER,EAArB,EAAyBQ,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAER,EAAvC,EAA2CQ,EAAEZ,EAA7C,EAAiDY,EAAEJ,EAAnD,EAAuDI,EAAEH,EAAzD,CARiB,EASjB,CAACG,EAAEL,EAAH,EAAOK,EAAEX,EAAT,EAAaW,EAAER,EAAf,EAAmBQ,EAAER,EAArB,EAAyBQ,EAAER,EAA3B,EAA+BQ,EAAER,EAAjC,EAAqCQ,EAAER,EAAvC,EAA2CQ,EAAER,EAA7C,EAAiDQ,EAAEZ,EAAnD,EAAuDY,EAAEH,EAAzD,CATiB,EAUjB,CAACG,EAAEX,EAAH,EAAOW,EAAEP,EAAT,EAAaO,EAAEP,EAAf,EAAmBO,EAAEP,EAArB,EAAyBO,EAAEP,EAA3B,EAA+BO,EAAEP,EAAjC,EAAqCO,EAAEP,EAAvC,EAA2CO,EAAEP,EAA7C,EAAiDO,EAAEP,EAAnD,EAAuDO,EAAEZ,EAAzD,CAViB;AArBsB,CAApC;;AAmCP;;;;;;;AAOO,IAAMc,sCAAe,SAAfA,YAAe,OAA8D;AAAA,MAA3DC,IAA2D,QAA3DA,IAA2D;AAAA,MAArDC,MAAqD,QAArDA,MAAqD;;AACxF,MAAMC,OAAOD,OAAOE,MAApB;AACA,MAAMC,QAAQH,OAAO,CAAP,EAAUE,MAAxB;;AAEA,MAAME,WAAWL,KAAKM,KAAL,GAAaF,KAA9B;AACA,MAAMG,WAAWP,KAAKQ,MAAL,GAAcN,IAA/B;;AAEA,SAAO;AACLO,OAAGJ,QADE;AAELK,OAAGH;AAFE,GAAP;AAID,CAXM;;AAaP;;;;;;AAMO,IAAMI,gDAAoB,SAApBA,iBAAoB;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,KAAV,SAAUA,KAAV;AAAA,SAAsE;AACrGC,UAAMC,KAAKC,KAAL,CAAWJ,MAAMH,CAAN,GAAUI,MAAMJ,CAA3B,CAD+F;AAErGQ,SAAKF,KAAKC,KAAL,CAAWJ,MAAMF,CAAN,GAAUG,MAAMH,CAA3B;AAFgG,GAAtE;AAAA,CAA1B;;AAKP;;;AAGA,IAAMQ,OAAO,EAAE,SAAS,IAAX,EAAiB,mBAAmB,IAApC,EAAb;;AAEO,IAAMC,sCAAe,SAAfA,YAAe,CAACC,IAAD,EAA0BC,KAA1B,EAAoDC,OAApD,SAKzBC,CALyB,EAKN;AAAA,MALgFvB,IAKhF,SALgFA,IAKhF;AAAA,MALsFY,KAKtF,SALsFA,KAKtF;AAAA,MAL6FX,MAK7F,SAL6FA,MAK7F;AAAA,MALqGuB,SAKrG,SALqGA,SAKrG;;AACpB,MAAMX,QAAQd,aAAa,EAAEC,UAAF,EAAQC,cAAR,EAAb,CAAd;AACA,MAAMwB,YAAYd,kBAAkB,EAAEC,YAAF,EAASC,YAAT,EAAlB,CAAlB;AACA,MAAMX,OAAOD,OAAOE,MAApB;AACA,MAAMC,QAAQH,OAAO,CAAP,EAAUE,MAAxB;;AAEA,MAAIsB,UAAUR,GAAV,IAAiBf,IAArB,EAA2B;AACzBuB,cAAUR,GAAV,GAAgBf,OAAO,CAAvB;AACD,GAFD,MAEO,IAAIuB,UAAUR,GAAV,GAAgB,CAApB,EAAuB;AAC5BQ,cAAUR,GAAV,GAAgB,CAAhB;AACD;;AAED,MAAIQ,UAAUX,IAAV,IAAkBV,KAAtB,EAA6B;AAC3BqB,cAAUX,IAAV,GAAiBV,QAAQ,CAAzB;AACD,GAFD,MAEO,IAAIqB,UAAUX,IAAV,GAAiB,CAArB,EAAwB;AAC7BW,cAAUX,IAAV,GAAiB,CAAjB;AACD;;AAED,MAAMA,OAAOb,OAAOwB,UAAUR,GAAjB,EAAsBQ,UAAUX,IAAhC,CAAb;AACA,MAAI,CAACU,UAAUV,IAAV,CAAL,EAAsB;AACpB,qBAAOY,KAAP,CAAa,4BAAb,EAA2C,EAAE1B,UAAF,EAAQY,YAAR,EAAeX,cAAf,EAAuBY,YAAvB,EAA8BY,oBAA9B,EAAyCvB,UAAzC,EAA+CE,YAA/C,EAA3C;AACA;AACD;;AAED,MAAMuB,MAAM;AACVP,UAAMA,KAAKQ,EADD,EACKP,OAAOA,MAAMO,EADlB,EACsBN,gBADtB,EAC+BO,KAAK;AAC5C7B,gBAD4C;AAE5CY,kBAF4C;AAG5CkB,gBAAUL,SAHkC;AAI5CM,YAAM,EAAE7B,UAAF,EAAQE,YAAR,EAJsC;AAK5CS;AAL4C;AADpC,GAAZ;AASA,MAAI,yBAAUc,GAAV,EAAeT,KAAKK,CAAL,CAAf,CAAJ,EAA6B;AAC3B;AACD;AACDL,OAAKK,CAAL,IAAUI,GAAV;;AAEA,SAAOH,UAAUV,IAAV,EAAgBM,IAAhB,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;AAC3CtB,cAD2C;AAE3CY,gBAF2C;AAG3CkB,cAAUL,SAHiC;AAI3CM,UAAM,EAAE7B,UAAF,EAAQE,YAAR,EAJqC;AAK3CS;AAL2C,GAAtC,CAAP;AAOD,CAlDM;;AAoDP;;;AAGO,IAAMmB,wDAAwB,SAAxBA,qBAAwB;AAAA,MAAGpB,KAAH,SAAGA,KAAH;AAAA,MAAUkB,QAAV,SAAUA,QAAV;AAAA,MAAoBjB,KAApB,SAAoBA,KAApB;AAAA,SAI9B;AACLJ,OAAGM,KAAKkB,KAAL,CAAWrB,MAAMH,CAAN,GAAWqB,SAAShB,IAAT,GAAgBD,MAAMJ,CAA5C,CADE;AAELC,OAAGK,KAAKkB,KAAL,CAAWrB,MAAMF,CAAN,GAAWoB,SAASb,GAAT,GAAeJ,MAAMH,CAA3C;AAFE,GAJ8B;AAAA,CAA9B;;AASP;;;AAGO,IAAMwB,sCAAe,SAAfA,YAAe,QAAmF;AAAA,MAAhFH,IAAgF,SAAhFA,IAAgF;AAAA,MAA1EI,MAA0E,SAA1EA,MAA0E;AAAA,MAAlEL,QAAkE,SAAlEA,QAAkE;;AAC7G,MAAIC,QAAQ,CAACI,SAAS,CAAV,IAAe,CAA3B,EAA8B;AAC5B,WAAOpB,KAAKkB,KAAL,CAAWH,YAAYC,OAAOI,MAAnB,CAAX,CAAP;AACD;;AAED,MAAMC,QAAQL,OAAQ,CAACI,SAAS,CAAV,IAAe,CAArC;AACA,MAAME,QAAQ,CAAC,CAAD,CAAd;AACA,MAAIC,UAAUF,KAAd;AACA,OAAK,IAAIG,IAAI,CAAb,EAAgBA,KAAKJ,MAArB,EAA6BI,GAA7B,EAAkC;AAChCF,UAAMG,IAAN,CAAWH,MAAME,CAAN,IAAYD,UAAU,CAAjC;AACAA,eAAW,CAAX;AACA,QAAIR,YAAYO,MAAME,CAAN,IAAYA,IAAI,CAA5B,IAAkCT,WAAWO,MAAME,IAAI,CAAV,IAAgB,CAACA,IAAI,CAAL,IAAU,CAA3E,EAA+E;AAC7E,aAAOA,CAAP;AACD;AACF;;AAED,SAAOJ,MAAP;AACD,CAjBM;;AAmBP;;;;;;;;;;;AAWO,IAAMM,gDAAoB,SAApBA,iBAAoB,QAML;AAAA,MANQ7B,KAMR,SANQA,KAMR;AAAA,MANekB,QAMf,SANeA,QAMf;AAAA,MANyBT,KAMzB,SANyBA,KAMzB;AAAA,MANgCR,KAMhC,SANgCA,KAMhC;AAAA,MANuC6B,KAMvC,SANuCA,KAMvC;AAAA,MAAzBC,GAAyB,uEAAV,KAAU;AAAA,0BACOtB,KADP,CAClBuB,IADkB,CACVxC,KADU;AAAA,MACVA,KADU,qCACF,EADE;;AAE1B,MAAMK,IAAIuB,sBAAsB,EAAEpB,YAAF,EAASkB,kBAAT,EAAmBjB,YAAnB,EAAtB,EAAkDJ,CAA5D;AACA,MAAIoC,KAAKX,aAAa,EAAEH,MAAMlB,MAAMJ,CAAd,EAAiBqB,UAAUrB,CAA3B,EAA8B0B,QAAQO,KAAtC,EAAb,CAAT;;AAEA,MAAItC,MAAMD,MAAV,EAAkB;AAChB;AACA,WAAOuC,KAAP;AACD;;AAED;AACA;AACA,MAAIrB,MAAMuB,IAAN,CAAWE,MAAX,IAAqBD,OAAO,CAAhC,EAAmC;AACjCA,SAAK,CAAL;AACD;;AAED,SAAOF,MAAMD,QAAQG,EAAd,GAAmBA,EAA1B;AACD,CAvBM;;AAyBP;;;;;AAKO,IAAME,4CAAkB,SAAlBA,eAAkB,QAAqK;AAAA,MAAlKL,KAAkK,SAAlKA,KAAkK;AAAA,MAA3J9B,KAA2J,SAA3JA,KAA2J;AAAA,MAApJS,KAAoJ,SAApJA,KAAoJ;AAAA,MAA7IS,QAA6I,SAA7IA,QAA6I;AAAA,MAAnIjB,KAAmI,SAAnIA,KAAmI;AAAA,MAAzB8B,GAAyB,uEAAV,KAAU;AAAA,2BACjKtB,KADiK,CAC1LuB,IAD0L,CAClLxC,KADkL;AAAA,MAClLA,KADkL,sCAC1K,EAD0K;;AAElM,MAAMM,IAAIsB,sBAAsB,EAAEpB,YAAF,EAASkB,kBAAT,EAAmBjB,YAAnB,EAAtB,EAAkDH,CAA5D;AACA,MAAImC,KAAKX,aAAa,EAAEH,MAAMlB,MAAMH,CAAd,EAAiBoB,UAAUpB,CAA3B,EAA8ByB,QAAQO,KAAtC,EAAb,CAAT;;AAEA,MAAItC,MAAMD,MAAV,EAAkB;AAChB;AACA,WAAOuC,KAAP;AACD;;AAED;AACA;AACA,MAAIrB,MAAMuB,IAAN,CAAWE,MAAX,IAAqBD,OAAO,CAAhC,EAAmC;AACjCA,SAAK,CAAL;AACD;;AAED,SAAOF,MAAMD,QAAQG,EAAd,GAAmBA,EAA1B;AACD,CAjBM;;AAmBP,IAAMG,eAAe,SAAfA,YAAe,CAAC3B,KAAD;AAAA,SAA8BA,MAAMuB,IAAN,CAAWE,MAAX,GAAoB,CAApB,GAAwB,CAAtD;AAAA,CAArB;;AAEA;;;AAGO,IAAMG,0GACVpD,EAAEf,EADQ,EACH,UAACsC,IAAD,EAA0BC,KAA1B;AAAA,MAAsD6B,KAAtD,SAAsDA,KAAtD;AAAA,SAA8EA,MAAM9B,KAAKQ,EAAX,CAA9E;AAAA,CADG,sCAIV/B,EAAEd,EAJQ,EAIH,UAACqC,IAAD,EAA0BC,KAA1B,SAAkFQ,GAAlF,EAAkG;AAAA,MAA5CsB,MAA4C,SAA5CA,MAA4C;AAAA,MAApCC,KAAoC,SAApCA,KAAoC;;AACxG,MAAMxC,QAAQoB,sBAAsBH,GAAtB,CAAd;AACA,MAAMa,QAAQM,aAAa3B,KAAb,CAAd;;AAEA,MAAIT,MAAMH,CAAN,GAAUG,MAAMF,CAApB,EAAuB;AACrB,WAAOyC,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwCX,KAAxC,CAAP;AACD;;AAEDU,QAAMhC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCX,KAAvC;AACD,CAbU,sCAeV7C,EAAEb,EAfQ,EAeH,UAACoC,IAAD,EAA0BC,KAA1B,UAAmFQ,GAAnF,EAAmG;AAAA,MAA7CyB,OAA6C,UAA7CA,OAA6C;AAAA,MAApCF,KAAoC,UAApCA,KAAoC;;AACzG,MAAMxC,QAAQoB,sBAAsBH,GAAtB,CAAd;AACA,MAAMa,QAAQM,aAAa3B,KAAb,CAAd;;AAEA,MAAIT,MAAMH,CAAN,GAAUG,MAAMF,CAApB,EAAuB;AACrB,WAAO4C,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyCX,KAAzC,CAAP;AACD;;AAEDU,QAAMhC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCX,KAAvC;AACD,CAxBU,sCA0BV7C,EAAEZ,EA1BQ,EA0BH,UAACmC,IAAD,EAA0BC,KAA1B,UAAmFQ,GAAnF,EAAmG;AAAA,MAA7CyB,OAA6C,UAA7CA,OAA6C;AAAA,MAApCC,KAAoC,UAApCA,KAAoC;;AACzG,MAAM3C,QAAQoB,sBAAsBH,GAAtB,CAAd;AACA,MAAMa,QAAQM,aAAa3B,KAAb,CAAd;;AAEA,MAAIT,MAAMH,CAAN,GAAUG,MAAMF,CAApB,EAAuB;AACrB,WAAO4C,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyCX,KAAzC,CAAP;AACD;AACDa,QAAMnC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCX,KAAvC;AACD,CAlCU,sCAoCV7C,EAAEX,EApCQ,EAoCH,UAACkC,IAAD,EAA0BC,KAA1B,UAAkFQ,GAAlF,EAAkG;AAAA,MAA5CsB,MAA4C,UAA5CA,MAA4C;AAAA,MAApCI,KAAoC,UAApCA,KAAoC;;AACxG,MAAM3C,QAAQoB,sBAAsBH,GAAtB,CAAd;AACA,MAAMa,QAAQM,aAAa3B,KAAb,CAAd;;AAEA,MAAIT,MAAMH,CAAN,GAAUG,MAAMF,CAApB,EAAuB;AACrB,WAAOyC,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwCX,KAAxC,CAAP;AACD;AACDa,QAAMnC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCX,KAAvC;AACD,CA5CU,sCA+CV7C,EAAEV,EA/CQ,EA+CH,UAACiC,IAAD,EAA0BC,KAA1B,UAA6E;AAAA,MAAvB+B,KAAuB,UAAvBA,KAAuB;;AACnF,MAAMV,QAAQM,aAAa3B,KAAb,CAAd;AACA+B,QAAMhC,KAAKiC,OAAL,EAAN,eACKhC,MAAMgC,OAAN,EADL,GAEGX,KAFH;AAGD,CApDU,sCAqDV7C,EAAER,EArDQ,EAqDH,UAAC+B,IAAD,EAA0BC,KAA1B,UAA6E;AAAA,MAAvBkC,KAAuB,UAAvBA,KAAuB;;AACnF,MAAMb,QAAQM,aAAa3B,KAAb,CAAd;AACAkC,QAAMnC,KAAKiC,OAAL,EAAN,eACKhC,MAAMgC,OAAN,EADL,GAEGX,KAFH;AAGD,CA1DU,sCA4DV7C,EAAEN,EA5DQ,EA4DH,UAAC6B,IAAD,EAA0BC,KAA1B,UAA8E;AAAA,MAAxB8B,MAAwB,UAAxBA,MAAwB;;AACpF,MAAMT,QAAQM,aAAa3B,KAAb,CAAd;AACA8B,SAAO/B,KAAKiC,OAAL,EAAP,eACKhC,MAAMgC,OAAN,EADL,GAEGX,KAFH;AAGD,CAjEU,sCAkEV7C,EAAEJ,EAlEQ,EAkEH,UAAC2B,IAAD,EAA0BC,KAA1B,UAA+E;AAAA,MAAzBiC,OAAyB,UAAzBA,OAAyB;;AACrF,MAAMZ,QAAQM,aAAa3B,KAAb,CAAd;AACAiC,UAAQlC,KAAKiC,OAAL,EAAR,eACKhC,MAAMgC,OAAN,EADL,GAEGX,KAFH;AAGD,CAvEU,sCA0EV7C,EAAET,EA1EQ,EA0EH,UAACgC,IAAD,EAA0BC,KAA1B,UAA0EQ,GAA1E;AAAA,MAAsDuB,KAAtD,UAAsDA,KAAtD;AAAA,SAA0FA,MAAMhC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCN,6BACpIlB,GADoI;AAEvIR,gBAFuI;AAGvIqB,WAAOrB,MAAMuB,IAAN,CAAWT,MAAX,CAAkBiB;AAH8G,MAItI,IAJsI,CAAvC,CAA1F;AAAA,CA1EG,sCA+EVvD,EAAEP,EA/EQ,EA+EH,UAAC8B,IAAD,EAA0BC,KAA1B,UAA0EQ,GAA1E;AAAA,MAAsD0B,KAAtD,UAAsDA,KAAtD;AAAA,SAA0FA,MAAMnC,KAAKiC,OAAL,EAAN,EAAsBhC,MAAMgC,OAAN,EAAtB,EAAuCN,6BACpIlB,GADoI;AAEvIR,gBAFuI;AAGvIqB,WAAOrB,MAAMuB,IAAN,CAAWT,MAAX,CAAkBoB;AAH8G,KAAvC,CAA1F;AAAA,CA/EG,sCAqFV1D,EAAEL,EArFQ,EAqFH,UAAC4B,IAAD,EAA0BC,KAA1B,UAA2EQ,GAA3E;AAAA,MAAsDsB,MAAtD,UAAsDA,MAAtD;AAAA,SAA2FA,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwCZ,+BACtIZ,GADsI;AAEzIR,gBAFyI;AAGzIqB,WAAOrB,MAAMuB,IAAN,CAAWT,MAAX,CAAkBqB;AAHgH,MAIxI,IAJwI,CAAxC,CAA3F;AAAA,CArFG,sCA0FV3D,EAAEH,EA1FQ,EA0FH,UAAC0B,IAAD,EAA0BC,KAA1B,UAA4EQ,GAA5E;AAAA,MAAsDyB,OAAtD,UAAsDA,OAAtD;AAAA,SAA4FA,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyCZ,+BACxIZ,GADwI;AAE3IR,gBAF2I;AAG3IqB,WAAOrB,MAAMuB,IAAN,CAAWT,MAAX,CAAkBsB;AAHkH,KAAzC,CAA5F;AAAA,CA1FG,sCAiGV5D,EAAEF,EAjGQ,EAiGH,UAACyB,IAAD,EAA0BC,KAA1B,UAA0F;AAAA,MAApCqC,UAAoC,UAApCA,UAAoC;AAAA,MAAxBP,MAAwB,UAAxBA,MAAwB;AAAA,oBAC/C9B,KAD+C,CACxFuB,IADwF;AAAA,MAChFE,MADgF,eAChFA,MADgF;AAAA,MACxEa,kBADwE,eACxEA,kBADwE;AAAA,2BAElBvC,IAFkB,CAExFwB,IAFwF,CAEhFgB,OAFgF;AAAA,0DAE3B,EAF2B;AAAA,iDAErEC,MAFqE;AAAA,gEAElC,EAFkC;AAAA,qDAE3DC,YAF2D;AAAA,MAE3DA,YAF2D,0CAE5C,KAF4C;;AAGhG,MAAIhB,UAAU,CAACgB,YAAf,EAA6B;AAC3B,WAAOX,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwC,CAAxC,CAAP;AACD;AACD,MAAIM,sBAAsBA,uBAAuBvC,KAAKQ,EAAtD,EAA0D;AACxD,WAAOuB,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwC,CAAxC,CAAP;AACD;AACD,MAAIM,sBAAsBA,uBAAuBvC,KAAKQ,EAAlD,IAAwDR,KAAKwB,IAAL,CAAUE,MAAV,KAAqB,MAAjF,EAAyF;AACvF,WAAOK,OAAO/B,KAAKiC,OAAL,EAAP,EAAuBhC,MAAMgC,OAAN,EAAvB,EAAwC,CAAxC,CAAP;AACD;;AAEDK,aAAWtC,KAAKiC,OAAL,EAAX,EAA2BhC,MAAMgC,OAAN,EAA3B;AACD,CA/GU,sCAiHVxD,EAAED,EAjHQ,EAiHH,UAACwB,IAAD,EAA0BC,KAA1B,UAA4F;AAAA,MAAtC0C,WAAsC,UAAtCA,WAAsC;AAAA,MAAzBT,OAAyB,UAAzBA,OAAyB;AAAA,qBACjDjC,KADiD,CAC1FuB,IAD0F;AAAA,MAClFE,MADkF,gBAClFA,MADkF;AAAA,MAC1Ea,kBAD0E,gBAC1EA,kBAD0E;AAAA,4BAEpBvC,IAFoB,CAE1FwB,IAF0F,CAElFgB,OAFkF;AAAA,4DAE7B,EAF6B;AAAA,kDAEvEC,MAFuE;AAAA,gEAEpC,EAFoC;AAAA,qDAE7DC,YAF6D;AAAA,MAE7DA,YAF6D,0CAE9C,KAF8C;;AAGlG,MAAIhB,UAAU,CAACgB,YAAf,EAA6B;AAC3B,WAAOR,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyC,CAAzC,CAAP;AACD;AACD,MAAIM,sBAAsBA,uBAAuBvC,KAAKQ,EAAtD,EAA0D;AACxD,WAAO0B,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyC,CAAzC,CAAP;AACD;AACD,MAAIM,sBAAsBA,uBAAuBvC,KAAKQ,EAAlD,IAAwDR,KAAKwB,IAAL,CAAUE,MAAV,KAAqB,OAAjF,EAA0F;AACxF,WAAOQ,QAAQlC,KAAKiC,OAAL,EAAR,EAAwBhC,MAAMgC,OAAN,EAAxB,EAAyC,CAAzC,CAAP;AACD;;AAEDU,cAAY3C,KAAKiC,OAAL,EAAZ,EAA4BhC,MAAMgC,OAAN,EAA5B;AACD,CA/HU,qBAAN;;AAkIP;;;;;;IAKqBW,Y;AAInB,0BAA6F;AAAA,qFAAJ,EAAI;AAAA,QAA/EC,QAA+E,UAA/EA,QAA+E;AAAA,QAArEzC,SAAqE,UAArEA,SAAqE;;AAAA;;AAAA,SAH7FA,SAG6F,GAHnEyB,gBAGmE;AAAA,SAF7FgB,QAE6F,GAFtEnE,eAEsE;;AAC3F,SAAKmE,QAAL,GAAgBA,YAAY,KAAKA,QAAjC;AACA,SAAKzC,SAAL,GAAiBA,aAAa,KAAKA,SAAnC;AACD;;;;0BAEKJ,I,EACAC,M,EACAC,O,UACmF;AAAA,UAArFtB,IAAqF,UAArFA,IAAqF;AAAA,UAA/EY,KAA+E,UAA/EA,KAA+E;AAAA,iCAAxEX,MAAwE;AAAA,UAAhEiE,GAAgE,iCAA1D,OAA0D;;AACvF,aAAO/C,aAAaC,IAAb,EAAmBC,MAAnB,EAA0BC,OAA1B,EAAmC;AACxCtB,kBADwC;AAExCY,oBAFwC;AAGxCX,gBAAQ,KAAKgE,QAAL,CAAcC,GAAd,CAHgC;AAIxC1C,mBAAW,KAAKA;AAJwB,OAAnC,EAKJ0C,GALI,CAAP;AAMD;;;;;;kBAnBkBF,Y","file":"index.js","sourcesContent":["// @flow\nimport deepEqual from 'deep-equal'\n\nimport type { ComponentizedCell, ComponentizedRow } from '../../types/editable'\nimport type { Room, Matrix, Vector, MatrixIndex, Callbacks } from '../../types/hover'\nimport logger from '../logger'\n\ntype MatrixList = { [key: string]: Matrix }\ntype CallbackList = { [key: number]: Function }\n\n/**\n * NO (None): No drop zone.\n *\n * Corners are counted clockwise, beginning top left\n * C1 (Corner top left): Position decided by top left corner function\n * C2 (Corner top right): Position decided by top right corner function\n * C3 (Corner bottom right): Position decided by bottom right corner function\n * C4 (Corner bottom left): Position decided by bottom left corner function\n *\n * Above:\n * AH (Above here): above, same level\n * AA (Above of self or some ancestor): Above, compute active level using classification functions, e.g. log, sin, mx + t\n *\n * Below:\n * BH (Below here)\n * BA (Below of self or some ancestor)\n *\n * Left of:\n * LH (Left of here)\n * LA (Left of self or some ancestor)\n *\n * Right of:\n * RH (Right of here)\n * RA (Right of self or some ancestor)\n *\n * Inside / inline\n * IL (Inline left)\n * IR (Inline right)\n */\nexport const classes: { [key: string]: number } = {\n  NO: 0,\n\n  C1: 10,\n  C2: 11,\n  C3: 12,\n  C4: 13,\n\n  AH: 200,\n  AA: 201,\n\n  BH: 210,\n  BA: 211,\n\n  LH: 220,\n  LA: 221,\n\n  RH: 230,\n  RA: 231,\n\n  IL: 300,\n  IR: 301\n}\n\nconst c = classes\n\n/**\n * A list of matrices that are used to define the callback function.\n *\n * @type {{6x6: *[], 10x10: *[], 10x10-no-inline: *[]}}\n */\nexport const defaultMatrices: MatrixList = {\n  '6x6': [\n    [c.C1, c.AA, c.AA, c.AA, c.AA, c.C2],\n    [c.LA, c.IL, c.AH, c.AH, c.IR, c.RA],\n    [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA],\n    [c.LA, c.LH, c.NO, c.NO, c.RH, c.RA],\n    [c.LA, c.C4, c.BH, c.BH, c.C3, c.RA],\n    [c.C4, c.BA, c.BA, c.BA, c.BA, c.C3]\n  ],\n  '10x10': [\n    [c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2],\n    [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n    [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n    [c.LA, c.IL, c.IL, c.IL, c.AH, c.AH, c.IR, c.IR, c.IR, c.RA],\n    [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.IR, c.RH, c.RA],\n    [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA],\n    [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA],\n    [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3]\n  ],\n  '10x10-no-inline': [\n    [c.C1, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.AA, c.C2],\n    [c.LA, c.C1, c.AH, c.AH, c.AH, c.AH, c.AH, c.AH, c.C2, c.RA],\n    [c.LA, c.LH, c.C1, c.AH, c.AH, c.AH, c.AH, c.C2, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.C1, c.AH, c.AH, c.C2, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.LH, c.C1, c.C2, c.RH, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.LH, c.C4, c.C3, c.RH, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.LH, c.C4, c.BH, c.BH, c.C3, c.RH, c.RH, c.RA],\n    [c.LA, c.LH, c.C4, c.BH, c.BH, c.BH, c.BH, c.C3, c.RH, c.RA],\n    [c.LA, c.C4, c.BH, c.BH, c.BH, c.BH, c.BH, c.BH, c.C3, c.RA],\n    [c.C4, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.BA, c.C3]\n  ]\n}\n\n/**\n * Computes the average width and height for cells in a room.\n *\n * @param room\n * @param matrix\n * @returns {{x: number, y: number}}\n */\nexport const getRoomScale = ({ room, matrix }: { room: Room, matrix: Matrix }): Vector => {\n  const rows = matrix.length\n  const cells = matrix[0].length\n\n  const scalingX = room.width / cells\n  const scalingY = room.height / rows\n\n  return {\n    x: scalingX,\n    y: scalingY\n  }\n}\n\n/**\n * Returns the index of the hover cell.\n *\n * @param mouse\n * @param scale\n */\nexport const getMouseHoverCell = ({ mouse, scale }: { mouse: Vector, scale: Vector }): MatrixIndex => ({\n  cell: Math.floor(mouse.x / scale.x),\n  row: Math.floor(mouse.y / scale.y)\n})\n\n/**\n * Used for caching.\n */\nconst last = { '10x10': null, '10x10-no-inline': null }\n\nexport const computeHover = (item: ComponentizedCell, hover: ComponentizedCell, actions: Callbacks, { room, mouse, matrix, callbacks }: {\n  room: Room,\n  mouse: Vector,\n  callbacks: CallbackList,\n  matrix: Matrix\n}, m: string): any => {\n  const scale = getRoomScale({ room, matrix })\n  const hoverCell = getMouseHoverCell({ mouse, scale })\n  const rows = matrix.length\n  const cells = matrix[0].length\n\n  if (hoverCell.row >= rows) {\n    hoverCell.row = rows - 1\n  } else if (hoverCell.row < 0) {\n    hoverCell.row = 0\n  }\n\n  if (hoverCell.cell >= cells) {\n    hoverCell.cell = cells - 1\n  } else if (hoverCell.cell < 0) {\n    hoverCell.cell = 0\n  }\n\n  const cell = matrix[hoverCell.row][hoverCell.cell]\n  if (!callbacks[cell]) {\n    logger.error('Matrix callback not found.', { room, mouse, matrix, scale, hoverCell, rows, cells })\n    return\n  }\n\n  const all = {\n    item: item.id, hover: hover.id, actions, ctx: {\n      room,\n      mouse,\n      position: hoverCell,\n      size: { rows, cells },\n      scale\n    }\n  }\n  if (deepEqual(all, last[m])) {\n    return\n  }\n  last[m] = all\n\n  return callbacks[cell](item, hover, actions, {\n    room,\n    mouse,\n    position: hoverCell,\n    size: { rows, cells },\n    scale\n  })\n}\n\n/**\n * Return the mouse position relative to the cell.\n */\nexport const relativeMousePosition = ({ mouse, position, scale }: {\n  mouse: Vector,\n  scale: Vector,\n  position: MatrixIndex\n}) => ({\n  x: Math.round(mouse.x - (position.cell * scale.x)),\n  y: Math.round(mouse.y - (position.row * scale.y))\n})\n\n/**\n * Computes the drop level based on the mouse position and the cell width.\n*/\nexport const computeLevel = ({ size, levels, position }: {size: number, levels: number, position: number }) => {\n  if (size <= (levels + 1) * 2) {\n    return Math.round(position / (size / levels))\n  }\n\n  const spare = size - ((levels + 1) * 2)\n  const steps = [0]\n  let current = spare\n  for (let i = 0; i <= levels; i++) {\n    steps.push(steps[i] + (current / 2))\n    current /= 2\n    if (position >= steps[i] + (i * 2) && position < steps[i + 1] + ((i + 1) * 2)) {\n      return i\n    }\n  }\n\n  return levels\n}\n\n/**\n * Computes the horizontal drop level based on the mouse position.\n *\n * @param mouse\n * @param position\n * @param hover\n * @param scale\n * @param level\n * @param inv returns the inverse drop level. Usually true for left and above drop level computation.\n * @returns number\n */\nexport const computeHorizontal = ({ mouse, position, hover, scale, level }: {\n  mouse: Vector,\n  position: MatrixIndex,\n  scale: Vector,\n  level: number,\n  hover: ComponentizedRow\n}, inv: boolean = false) => {\n  const { node: { cells = [] } } = hover\n  const x = relativeMousePosition({ mouse, position, scale }).x\n  let at = computeLevel({ size: scale.x, position: x, levels: level })\n\n  if (cells.length) {\n    // Is row, always opt for lowest level\n    return level\n  }\n\n  // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n  // Set it to 1 instead.\n  if (hover.node.inline && at === 0) {\n    at = 1\n  }\n\n  return inv ? level - at : at\n}\n\n/**\n * Computes the vertical drop level based on the mouse position.\n *\n * @returns number\n */\nexport const computeVertical = ({ level, mouse, hover, position, scale }: { level: number, mouse: Vector, hover: ComponentizedRow, position: MatrixIndex, scale: Vector }, inv: boolean = false) => {\n  const { node: { cells = [] } } = hover\n  const y = relativeMousePosition({ mouse, position, scale }).y\n  let at = computeLevel({ size: scale.y, position: y, levels: level })\n\n  if (cells.length) {\n    // Is row, always opt for lowest level\n    return level\n  }\n\n  // If the hovered element is an inline element, level 0 would be directly besides it which doesn't work.\n  // Set it to 1 instead.\n  if (hover.node.inline && at === 0) {\n    at = 1\n  }\n\n  return inv ? level - at : at\n}\n\nconst getDropLevel = (hover: ComponentizedCell) => hover.node.inline ? 1 : 0\n\n/**\n * A list of callbacks.\n */\nexport const defaultCallbacks: CallbackList = {\n  [c.NO]: (item: ComponentizedCell, hover: ComponentizedCell, { clear }: Callbacks) => (clear(item.id)),\n\n  /* corners */\n  [c.C1]: (item: ComponentizedCell, hover: ComponentizedCell, { leftOf, above }: Callbacks, ctx: Object) => {\n    const mouse = relativeMousePosition(ctx)\n    const level = getDropLevel(hover)\n\n    if (mouse.x < mouse.y) {\n      return leftOf(item.rawNode(), hover.rawNode(), level)\n    }\n\n    above(item.rawNode(), hover.rawNode(), level)\n  },\n\n  [c.C2]: (item: ComponentizedCell, hover: ComponentizedCell, { rightOf, above }: Callbacks, ctx: Object) => {\n    const mouse = relativeMousePosition(ctx)\n    const level = getDropLevel(hover)\n\n    if (mouse.x > mouse.y) {\n      return rightOf(item.rawNode(), hover.rawNode(), level)\n    }\n\n    above(item.rawNode(), hover.rawNode(), level)\n  },\n\n  [c.C3]: (item: ComponentizedCell, hover: ComponentizedCell, { rightOf, below }: Callbacks, ctx: Object) => {\n    const mouse = relativeMousePosition(ctx)\n    const level = getDropLevel(hover)\n\n    if (mouse.x > mouse.y) {\n      return rightOf(item.rawNode(), hover.rawNode(), level)\n    }\n    below(item.rawNode(), hover.rawNode(), level)\n  },\n\n  [c.C4]: (item: ComponentizedCell, hover: ComponentizedCell, { leftOf, below }: Callbacks, ctx: Object) => {\n    const mouse = relativeMousePosition(ctx)\n    const level = getDropLevel(hover)\n\n    if (mouse.x < mouse.y) {\n      return leftOf(item.rawNode(), hover.rawNode(), level)\n    }\n    below(item.rawNode(), hover.rawNode(), level)\n  },\n\n  /* heres */\n  [c.AH]: (item: ComponentizedCell, hover: ComponentizedCell, { above }: Callbacks) => {\n    const level = getDropLevel(hover)\n    above(item.rawNode(), {\n      ...hover.rawNode()\n    }, level)\n  },\n  [c.BH]: (item: ComponentizedCell, hover: ComponentizedCell, { below }: Callbacks) => {\n    const level = getDropLevel(hover)\n    below(item.rawNode(), {\n      ...hover.rawNode()\n    }, level)\n  },\n\n  [c.LH]: (item: ComponentizedCell, hover: ComponentizedCell, { leftOf }: Callbacks) => {\n    const level = getDropLevel(hover)\n    leftOf(item.rawNode(), {\n      ...hover.rawNode()\n    }, level)\n  },\n  [c.RH]: (item: ComponentizedCell, hover: ComponentizedCell, { rightOf }: Callbacks) => {\n    const level = getDropLevel(hover)\n    rightOf(item.rawNode(), {\n      ...hover.rawNode()\n    }, level)\n  },\n\n  /* ancestors */\n  [c.AA]: (item: ComponentizedCell, hover: ComponentizedCell, { above }: Callbacks, ctx: Object) => above(item.rawNode(), hover.rawNode(), computeVertical({\n    ...ctx,\n    hover,\n    level: hover.node.levels.above\n  }, true)),\n  [c.BA]: (item: ComponentizedCell, hover: ComponentizedCell, { below }: Callbacks, ctx: Object) => below(item.rawNode(), hover.rawNode(), computeVertical({\n    ...ctx,\n    hover,\n    level: hover.node.levels.below\n  })),\n\n  [c.LA]: (item: ComponentizedCell, hover: ComponentizedCell, { leftOf }: Callbacks, ctx: Object) => leftOf(item.rawNode(), hover.rawNode(), computeHorizontal({\n    ...ctx,\n    hover,\n    level: hover.node.levels.left\n  }, true)),\n  [c.RA]: (item: ComponentizedCell, hover: ComponentizedCell, { rightOf }: Callbacks, ctx: Object) => rightOf(item.rawNode(), hover.rawNode(), computeHorizontal({\n    ...ctx,\n    hover,\n    level: hover.node.levels.right\n  })),\n\n  /* inline */\n  [c.IL]: (item: ComponentizedCell, hover: ComponentizedCell, { inlineLeft, leftOf }: Callbacks) => {\n    const { node: { inline, hasInlineNeighbour } } = hover\n    const { node: { content: { plugin: { isInlineable = false } = {} } = {} } } = item\n    if (inline || !isInlineable) {\n      return leftOf(item.rawNode(), hover.rawNode(), 2)\n    }\n    if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n      return leftOf(item.rawNode(), hover.rawNode(), 2)\n    }\n    if (hasInlineNeighbour && hasInlineNeighbour === item.id && item.node.inline === 'left') {\n      return leftOf(item.rawNode(), hover.rawNode(), 2)\n    }\n\n    inlineLeft(item.rawNode(), hover.rawNode())\n  },\n\n  [c.IR]: (item: ComponentizedCell, hover: ComponentizedCell, { inlineRight, rightOf }: Callbacks) => {\n    const { node: { inline, hasInlineNeighbour } } = hover\n    const { node: { content: { plugin: { isInlineable = false } = {} } = {} } } = item\n    if (inline || !isInlineable) {\n      return rightOf(item.rawNode(), hover.rawNode(), 2)\n    }\n    if (hasInlineNeighbour && hasInlineNeighbour !== item.id) {\n      return rightOf(item.rawNode(), hover.rawNode(), 2)\n    }\n    if (hasInlineNeighbour && hasInlineNeighbour === item.id && item.node.inline === 'right') {\n      return rightOf(item.rawNode(), hover.rawNode(), 2)\n    }\n\n    inlineRight(item.rawNode(), hover.rawNode())\n  }\n}\n\n/**\n * The HoverService uses callbacks and matrices to compute hover logic.\n *\n * @class HoverService\n */\nexport default class HoverService {\n  callbacks: CallbackList = defaultCallbacks\n  matrices: MatrixList = defaultMatrices\n\n  constructor({ matrices, callbacks }: { matrices: MatrixList, callbacks: CallbackList } = {}) {\n    this.matrices = matrices || this.matrices\n    this.callbacks = callbacks || this.callbacks\n  }\n\n  hover(item: ComponentizedCell,\n        hover: ComponentizedCell,\n        actions: Callbacks,\n    { room, mouse, matrix: use = '10x10' }: { room: Room, mouse: Vector, matrix: string }) {\n    return computeHover(item, hover, actions, {\n      room,\n      mouse,\n      matrix: this.matrices[use],\n      callbacks: this.callbacks\n    }, use)\n  }\n}\n"]}