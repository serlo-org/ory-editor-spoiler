{"version":3,"sources":["../src/store.js"],"names":["initialState","middleware","v","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],"mappings":";;;;;;;;AACA;;AAGA;;;;;;;;AAEA;;;kBAGe,UAACA,YAAD,EAAsD;AAAA,MAA/BC,UAA+B,uEAAd,EAAc;;AACnE;AACA,MAAMC,IAAI,cAAyB,YAAzB,IAAyC,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAA3D,IAAuEA,OAAOC,oCAA9E,GACND,OAAOC,oCAAP,CAA4C,EAA5C,CADM,iBAAV;;AAIA,SAAO,2CAELJ,YAFK,EAGLE,EAAE,2DAAmBD,UAAnB,EAAF,CAHK,CAAP;AAKD,C","file":"store.js","sourcesContent":["// @flow\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport type { Store } from './types/redux'\nimport rootReducer from './reducer'\n\n/**\n * Returns a new redux store.\n */\nexport default (initialState: Object, middleware: [] = []): Store => {\n  /* eslint no-underscore-dangle: 'off' */\n  const v = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose\n\n  return createStore(\n    rootReducer,\n    initialState,\n    v(applyMiddleware(...middleware))\n  )\n}\n"]}