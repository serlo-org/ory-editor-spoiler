{"version":3,"sources":["../../../src/reducer/display/index.js"],"names":["display","state","previous","mode","action","type","fallback","remember"],"mappings":";;;;;;;;;AACA;;AAGO,IAAMA,4BAAU,SAAVA,OAAU,GAGM;AAAA,MAHLC,KAGK,uEAHY;AACvCC,2CADuC;AAEvCC;AAFuC,GAGZ;AAAA,MAA1BC,MAA0B;;AAC3B,UAAQA,OAAOC,IAAf;AACE;AACE,0BACKJ,KADL;AAEEE,cAAMF,MAAMC,QAAN,KAAmBD,MAAME,IAAzB,GAAgCC,OAAOE,QAAvC,GAAkDL,MAAMC;AAFhE;AAIF;AACE,aAAO;AACLA,kBAAUE,OAAOD,IAAP,KAAgBF,MAAME,IAAtB,IAA8BC,OAAOG,QAArC,GAAgDN,MAAMC,QAAtD,GAAiEE,OAAOD,IAD7E;AAELA,cAAMC,OAAOD;AAFR,OAAP;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcD,CAlBM","file":"index.js","sourcesContent":["// @flow\nimport { DEFAULT_DISPLAY_MODE, SET_DISPLAY_MODE, SET_PREVIOUS_DISPLAY_MODE } from '../../actions/display'\nimport type { Display, DisplayAction } from '../../types/display'\n\nexport const display = (state: Display = {\n  previous: DEFAULT_DISPLAY_MODE,\n  mode: DEFAULT_DISPLAY_MODE\n}, action: DisplayAction) => {\n  switch (action.type) {\n    case SET_PREVIOUS_DISPLAY_MODE:\n      return {\n        ...state,\n        mode: state.previous === state.mode ? action.fallback : state.previous\n      }\n    case SET_DISPLAY_MODE:\n      return {\n        previous: action.mode === state.mode && action.remember ? state.previous : action.mode,\n        mode: action.mode\n      }\n    default:\n      return state\n  }\n}\n"]}