{"version":3,"sources":["../../../src/reducer/editable/tree.js"],"names":["inner","cb","action","state","identity","cell","reduce","content","layout","hover","rows","type","id","reduced","focused","focusSource","source","position","ids","cells","item","inline","map","filter","c","size","hasInlineNeighbour","row","r"],"mappings":"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","file":"tree.js","sourcesContent":["// @flow\n/* eslint-disable no-use-before-define */\n/* eslint no-duplicate-imports: \"off\" */\nimport pathOr from 'ramda/src/pathOr'\n\nimport { optimizeCell, optimizeRow, optimizeRows, optimizeCells, flatten } from './helper/optimize'\nimport { mergeDecorator } from './helper/merge'\nimport { isHoveringThis } from './helper/hover'\nimport { resizeCells } from './helper/sizing'\nimport { computeRow } from './helper/inline'\nimport { createCell, createRow } from '../../types/editable'\nimport {\n  CELL_REMOVE,\n  CELL_UPDATE_LAYOUT,\n  CELL_UPDATE_CONTENT,\n  CELL_INSERT_LEFT_OF,\n  CELL_INSERT_RIGHT_OF,\n  CELL_INSERT_ABOVE,\n  CELL_INSERT_BELOW,\n  CELL_INSERT_INLINE_LEFT,\n  CELL_INSERT_INLINE_RIGHT,\n  CELL_DRAG_HOVER,\n  CELL_RESIZE,\n  CELL_FOCUS,\n  CELL_BLUR,\n  CELL_BLUR_ALL\n} from '../../actions/cell'\n\nimport type { Cell, Row } from '../../types/editable'\n\nconst inner = (cb: Function, action: Object) => (state: Object) => cb(state, action)\nconst identity = (state: Cell) => state\n\nexport const cell = (state: Cell, action: Object): Cell => optimizeCell(((state: Cell, action: Object): Cell => {\n  const reduce = () => {\n    const content = pathOr(identity, ['content', 'plugin', 'reducer'], state)\n    const layout = pathOr(identity, ['content', 'layout', 'reducer'], state)\n\n    return content(layout(({\n      ...state,\n      hover: null,\n      rows: rows(state.rows, action)\n    }), action), action)\n  }\n\n  switch (action.type) {\n    case CELL_UPDATE_CONTENT:\n      if (action.id === state.id) {\n        // If this cell is being updated, set the data\n        const reduced = reduce()\n        return {\n          ...reduced,\n          content: {\n            ...(state.content || {}),\n            state: {\n              ...pathOr({}, ['content', 'state'], reduced),\n              ...action.state\n            }\n          }\n        }\n      }\n      return reduce()\n\n    case CELL_UPDATE_LAYOUT:\n      if (action.id === state.id) {\n        // If this cell is being updated, set the data\n        const reduced = reduce()\n        return {\n          ...reduced,\n          layout: {\n            ...(state.layout || {}),\n            state: {\n              ...pathOr({}, ['layout', 'state'], reduced),\n              ...action.state\n            }\n          }\n        }\n      }\n      return reduce()\n\n    case CELL_FOCUS:\n      if (action.id === state.id) {\n        // If this cell is being focused, set the data\n        return { ...reduce(), focused: true, focusSource: action.source }\n      }\n      return { ...reduce(), focused: false, focusSource: null }\n\n    case CELL_BLUR:\n      if (action.id === state.id) {\n        // If this cell is being blurred, set the data\n        return { ...reduce(), focused: false, focusSource: null }\n      }\n      return reduce()\n\n    case CELL_BLUR_ALL:\n      return { ...reduce(), focused: false }\n\n    case CELL_DRAG_HOVER:\n      if (isHoveringThis(state, action)) {\n        // if this is the cell we're hovering, set the hover attribute\n        return { ...reduce(), hover: action.position }\n      }\n      // or remove it if not\n      return reduce()\n\n    case CELL_INSERT_ABOVE:\n      if (isHoveringThis(state, action)) {\n        return {\n          ...createCell(),\n          id: action.ids[0],\n          hover: null,\n          rows: rows([{\n            ...createRow(),\n            id: action.ids[1],\n            cells: [{ ...(action.item), id: action.ids[2], inline: null }]\n          }, {\n            ...createRow(),\n            id: action.ids[3],\n            cells: [{ ...reduce(), id: action.ids[4] }]\n          }], { ...action, hover: null })\n        }\n      }\n      return reduce()\n\n    case CELL_INSERT_BELOW:\n      if (isHoveringThis(state, action)) {\n        return {\n          ...createCell(),\n          id: action.ids[0],\n          hover: null,\n          rows: rows([{\n            ...createRow(),\n            id: action.ids[1],\n            cells: [{ ...reduce(), id: action.ids[2] }]\n          }, {\n            ...createRow(),\n            id: action.ids[3],\n            cells: [{ ...(action.item), id: action.ids[4], inline: null }]\n          }], { ...action, hover: null })\n        }\n      }\n      return reduce()\n\n    default:\n      return reduce()\n  }\n})(state, action))\n\nexport const cells = (state: Cell[] = [], action: Object): Cell[] => optimizeCells(((state: Cell[], action: Object): Cell[] => {\n  switch (action.type) {\n    case CELL_RESIZE:\n      return resizeCells(state.map(inner(cell, action)), action)\n\n    case CELL_INSERT_BELOW:\n    case CELL_INSERT_ABOVE:\n      return state.filter((c: Cell) => c.id !== action.item.id).map(inner(cell, action))\n\n    case CELL_INSERT_LEFT_OF:\n      return state\n        .filter((c: Cell) => c.id !== action.item.id)\n        .map((c: Cell) => isHoveringThis(c, action)\n          ? [{ ...(action.item), id: action.ids[0], inline: null }, { ...c, id: action.ids[1] }]\n          : [c])\n        .reduce(flatten, [])\n        .map(inner(cell, action))\n\n    case CELL_INSERT_RIGHT_OF:\n      return state\n        .filter((c: Cell) => c.id !== action.item.id)\n        .map((c: Cell) => isHoveringThis(c, action)\n          ? [{ ...c, id: action.ids[0] }, { ...(action.item), id: action.ids[1], inline: null }]\n          : [c])\n        .reduce(flatten, [])\n        .map(inner(cell, action))\n\n    case CELL_INSERT_INLINE_RIGHT:\n    case CELL_INSERT_INLINE_LEFT:\n      return state\n        .filter((c: Cell) => c.id !== action.item.id)\n        .map((c: Cell) => {\n          if (isHoveringThis(c, action)) {\n            return [{\n              ...createCell(),\n              id: action.ids[0],\n              rows: [\n                {\n                  ...createRow(),\n                  id: action.ids[1],\n                  cells: [{\n                    ...(action.item),\n                    inline: action.type === CELL_INSERT_INLINE_RIGHT ? 'right' : 'left',\n                    id: action.ids[2],\n                    size: 0,\n                  }, { ...c, id: action.ids[3], inline: null, hasInlineNeighbour: action.ids[2], size: 0 }]\n                }\n              ]\n            }]\n          }\n          return [c]\n        })\n        .reduce(flatten, [])\n        .map(inner(cell, action))\n\n    case CELL_REMOVE:\n      return state.filter(({ id }: Cell) => id !== action.id).map(inner(cell, action))\n\n    default:\n      return state.map(inner(cell, action))\n  }\n})(state, action))\n\nexport const row = (state: Row, action: Object): Row => computeRow(optimizeRow(((state: Row, action: Object): Row => {\n  const reduce = () => ({\n    ...state,\n    hover: null,\n    cells: cells(state.cells, action)\n  })\n\n  switch (action.type) {\n    case CELL_INSERT_LEFT_OF:\n      if (!isHoveringThis(state, action)) {\n        return reduce()\n      }\n      return {\n        ...state,\n        hover: null,\n        cells: cells([\n          { ...(action.item), id: action.ids[0], inline: null },\n          ...(state.cells)\n        ], { ...action, hover: null })\n      }\n\n    case CELL_INSERT_RIGHT_OF:\n      if (!isHoveringThis(state, action)) {\n        return reduce()\n      }\n      return {\n        ...state,\n        hover: null,\n        cells: cells([\n          ...(state.cells),\n          { ...(action.item), id: action.ids[0], inline: null }\n        ], { ...action, hover: null })\n      }\n\n    case CELL_DRAG_HOVER:\n      if (isHoveringThis(state, action)) {\n        return { ...reduce(), hover: action.position }\n      }\n      return reduce()\n\n    default:\n      return reduce()\n  }\n})(state, action)))\n\nexport const rows = (state: Row[] = [], action: Object): Row[] => optimizeRows(mergeDecorator(action)(((state: Row[], action: Object): Row[] => {\n  const reduce = () => state.map(inner(row, action))\n  switch (action.type) {\n    case CELL_INSERT_ABOVE:\n      return state\n        .map((r: Row) => isHoveringThis(r, action)\n          ? (\n        [{\n          ...createRow(),\n          cells: [{ ...(action.item), id: action.ids[1], inline: null }],\n          id: action.ids[0]\n        }, {\n          ...r,\n          id: action.ids[2]\n        }]) : [r])\n        .reduce(flatten, [])\n        .map(inner(row, action))\n    case CELL_INSERT_BELOW:\n      return state\n        .map((r: Row) => isHoveringThis(r, action)\n          ? (\n        [{\n          ...r, id: action.ids[0]\n        }, {\n          ...createRow(),\n          cells: [{ ...(action.item), id: action.ids[2], inline: null }],\n          id: action.ids[1]\n        }]) : [r])\n        .reduce(flatten, [])\n        .map(inner(row, action))\n\n    default:\n      return reduce()\n  }\n})(state, action)))\n"]}