{"version":3,"sources":["../../../../src/reducer/editable/helper/hover.js"],"names":["isHoveringThis","state","action","level","hover","children","rows","cells","Boolean","find","child","id"],"mappings":";;;;;;;;AAEA;;;AAGO,IAAMA,0CAAiB,SAAjBA,cAAiB,GAAiD;AAAA,MAAhDC,KAAgD,uEAAhC,EAAgC;AAAA,MAA5BC,MAA4B;AAAA,sBACzCA,MADyC,CACrEC,KADqE;AAAA,MACrEA,KADqE,iCAC7D,CAD6D;AAAA,sBACzCD,MADyC,CAC1DE,KAD0D;AAAA,MAC1DA,KAD0D,iCAClD,IADkD;;AAE7E,MAAMC,WAAWJ,MAAMK,IAAN,IAAcL,MAAMM,KAApB,IAA6B,EAA9C;AACA,MAAIJ,QAAQ,CAAZ,EAAe;AACb,WAAOK,QAAQH,SAASI,IAAT,CAAc,UAACC,KAAD;AAAA,aAAgBV,eAAeU,KAAf,eAA2BR,MAA3B,IAAmCC,OAAOA,QAAQ,CAAlD,IAAhB;AAAA,KAAd,CAAR,CAAP;AACD;;AAED,SAAOC,UAAUH,MAAMU,EAAvB;AACD,CARM","file":"hover.js","sourcesContent":["// @flow\n\n/**\n * Check if this item is currently being hovered.\n */\nexport const isHoveringThis = (state: Object = {}, action: Object): boolean => {\n  const { level = 0, hover = null } = action\n  const children = state.rows || state.cells || []\n  if (level > 0) {\n    return Boolean(children.find((child: any) => isHoveringThis(child, { ...action, level: level - 1 })))\n  }\n\n  return hover === state.id\n}\n"]}