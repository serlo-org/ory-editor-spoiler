'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.editable = exports.rawEditableReducer = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _cell = require('../../actions/cell');

var _order = require('./helper/order');

var _tree = require('./helper/tree');

var _tree2 = require('./tree.js');

var _editable = require('../../types/editable');

var rawEditableReducer = exports.rawEditableReducer = function rawEditableReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    id: null,
    cells: [],
    config: {
      whitelist: []
    }
  };
  var action = arguments[1];

  var newCells = (0, _tree.decorate)((0, _tree2.cells)(state.cells, action));

  // eslint-disable-next-line default-case
  switch (action.type) {
    case _cell.CELL_CREATE_FALLBACK:
      if (action.editable === state.id) {
        var c = _extends({}, (0, _editable.createCell)(), {
          content: { plugin: action.fallback, state: action.fallback.createInitialState() },
          id: action.ids[0]
        });
        newCells = (0, _tree.decorate)((0, _tree2.cells)([c], action));
      }
      break;
  }

  return _extends({}, state, {
    cells: newCells,
    cellOrder: (0, _order.cellOrder)(newCells || [])
  });
};

var editable = exports.editable = rawEditableReducer;
//# sourceMappingURL=index.js.map