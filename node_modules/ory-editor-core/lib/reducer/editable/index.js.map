{"version":3,"sources":["../../../src/reducer/editable/index.js"],"names":["rawEditableReducer","state","id","cells","config","whitelist","action","newCells","type","editable","c","content","plugin","fallback","createInitialState","ids","cellOrder"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,kDAAqB,SAArBA,kBAAqB,GAMZ;AAAA,MANaC,KAMb,uEAN6B;AACjDC,QAAI,IAD6C;AAEjDC,WAAO,EAF0C;AAGjDC,YAAQ;AACNC,iBAAW;AADL;AAHyC,GAM7B;AAAA,MAAnBC,MAAmB;;AACpB,MAAIC,WAAW,oBAAS,kBAAMN,MAAME,KAAZ,EAAmBG,MAAnB,CAAT,CAAf;;AAEA;AACA,UAAQA,OAAOE,IAAf;AACE;AACE,UAAIF,OAAOG,QAAP,KAAoBR,MAAMC,EAA9B,EAAkC;AAChC,YAAMQ,iBACC,2BADD;AAEJC,mBAAS,EAAEC,QAAQN,OAAOO,QAAjB,EAA2BZ,OAAOK,OAAOO,QAAP,CAAgBC,kBAAhB,EAAlC,EAFL;AAGJZ,cAAII,OAAOS,GAAP,CAAW,CAAX;AAHA,UAAN;AAKAR,mBAAW,oBAAS,kBAAM,CAACG,CAAD,CAAN,EAAWJ,MAAX,CAAT,CAAX;AACD;AACD;AAVJ;;AAaA,sBACKL,KADL;AAEEE,WAAOI,QAFT;AAGES,eAAW,sBAAUT,YAAY,EAAtB;AAHb;AAKD,CA5BM;;AA8BA,IAAME,8BAAWT,kBAAjB","file":"index.js","sourcesContent":["// @flow\nimport { CELL_CREATE_FALLBACK } from '../../actions/cell'\nimport { cellOrder } from './helper/order'\nimport { decorate } from './helper/tree'\nimport { cells } from './tree.js'\nimport { createCell } from '../../types/editable'\n\nexport const rawEditableReducer = (state: Object = {\n  id: null,\n  cells: [],\n  config: {\n    whitelist: []\n  }\n}, action: Object) => {\n  let newCells = decorate(cells(state.cells, action))\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case CELL_CREATE_FALLBACK:\n      if (action.editable === state.id) {\n        const c = {\n            ...createCell(),\n          content: { plugin: action.fallback, state: action.fallback.createInitialState() },\n          id: action.ids[0],\n        }\n        newCells = decorate(cells([c], action))\n      }\n      break\n  }\n\n  return {\n    ...state,\n    cells: newCells,\n    cellOrder: cellOrder(newCells || [])\n  }\n}\n\nexport const editable = rawEditableReducer\n"]}