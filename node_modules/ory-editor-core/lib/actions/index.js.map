{"version":3,"sources":["../../src/actions/index.js"],"names":["actions","dispatch","cell","updateContent","id","state","updateLayout","remove","resize","size","focus","source","focusNext","focusPrevious","blurAll","drag","cancelDrag","hoverLeftOf","hoverRightOf","hoverAbove","hoverBelow","hoverFloatingLeft","hoverFloatingRight","clearHover","insertBelow","insertAbove","insertRightOf","insertLeftOf","insertFloatingLeft","insertFloatingRight","editable","add","update","mode","insert","edit","preview","layout","undo","redo"],"mappings":"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","file":"index.js","sourcesContent":["import {\n  updateCellContent,\n  updateCellLayout,\n  removeCell,\n  resizeCell,\n  focusCell,\n  focusNextCell,\n  focusPreviousCell,\n  blurAllCells\n} from './cell/core'\n\nimport {\n  cellHoverLeftOf,\n  cellHoverRightOf,\n  cellHoverAbove,\n  cellHoverBelow,\n  cellHoverInlineLeft,\n  cellHoverInlineRight,\n  dragCell,\n  clearHover,\n  cancelCellDrag\n} from './cell/drag'\n\nimport {\n  insertCellBelow, insertCellAbove, insertCellRightOf, insertCellLeftOf, insertCellLeftInline, insertCellRightInline\n} from './cell/insert'\n\nimport { undo, redo } from './undo'\n\nimport { updateEditable } from './editables'\n\nimport {\n  insertMode,\n  editMode,\n  previewMode,\n  layoutMode,\n  resizeMode\n} from './display'\n\nexport const actions = (dispatch) => ({\n  cell: {\n    updateContent: (id: string, state: {}) => dispatch(updateCellContent(id)(state)),\n    updateLayout: (id: string, state: {}) => dispatch(updateCellLayout(id)(state)),\n\n    remove: (...args) => dispatch(removeCell(...args)),\n    resize: (id: string, size: number) => dispatch(resizeCell(id)(size)),\n    focus: (id: string, source: {}) => dispatch(focusCell(id)(source)),\n    focusNext: (id: string) => dispatch(focusNextCell(id)()),\n    focusPrevious: (id: string) => dispatch(focusPreviousCell(id)()),\n    blurAll: (...args) => dispatch(blurAllCells(...args)),\n\n    drag: (...args) => dispatch(dragCell(...args)),\n    cancelDrag: (...args) => dispatch(cancelCellDrag(...args)),\n\n    hoverLeftOf: (...args) => dispatch(cellHoverLeftOf(...args)),\n    hoverRightOf: (...args) => dispatch(cellHoverRightOf(...args)),\n    hoverAbove: (...args) => dispatch(cellHoverAbove(...args)),\n    hoverBelow: (...args) => dispatch(cellHoverBelow(...args)),\n    hoverFloatingLeft: (...args) => dispatch(cellHoverInlineLeft(...args)),\n    hoverFloatingRight: (...args) => dispatch(cellHoverInlineRight(...args)),\n    clearHover: (...args) => dispatch(clearHover(...args)),\n\n    insertBelow: (...args) => dispatch(insertCellBelow(...args)),\n    insertAbove: (...args) => dispatch(insertCellAbove(...args)),\n    insertRightOf: (...args) => dispatch(insertCellRightOf(...args)),\n    insertLeftOf: (...args) => dispatch(insertCellLeftOf(...args)),\n    insertFloatingLeft: (...args) => dispatch(insertCellLeftInline(...args)),\n    insertFloatingRight: (...args) => dispatch(insertCellRightInline(...args))\n  },\n\n  editable: {\n    add: (...args) => dispatch(updateEditable(...args)),\n    update: (...args) => dispatch(updateEditable(...args))\n  },\n\n  mode: {\n    insert: (...args) => dispatch(insertMode(...args)),\n    edit: (...args) => dispatch(editMode(...args)),\n    preview: (...args) => dispatch(previewMode(...args)),\n    layout: (...args) => dispatch(layoutMode(...args)),\n    resize: (...args) => dispatch(resizeMode(...args))\n  },\n\n  undo: (...args) => dispatch(undo(...args)), redo: (...args) => dispatch(redo(...args))\n})\n"]}