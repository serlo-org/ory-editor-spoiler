'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertCellRightInline = exports.insertCellLeftInline = exports.insertCellLeftOf = exports.insertCellRightOf = exports.insertCellAbove = exports.insertCellBelow = exports.CELL_INSERT_INLINE_RIGHT = exports.CELL_INSERT_INLINE_LEFT = exports.CELL_INSERT_RIGHT_OF = exports.CELL_INSERT_LEFT_OF = exports.CELL_INSERT_BELOW = exports.CELL_INSERT_ABOVE = undefined;

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CELL_INSERT_ABOVE = exports.CELL_INSERT_ABOVE = 'CELL_INSERT_ABOVE';
var CELL_INSERT_BELOW = exports.CELL_INSERT_BELOW = 'CELL_INSERT_BELOW';
var CELL_INSERT_LEFT_OF = exports.CELL_INSERT_LEFT_OF = 'CELL_INSERT_LEFT_OF';
var CELL_INSERT_RIGHT_OF = exports.CELL_INSERT_RIGHT_OF = 'CELL_INSERT_RIGHT_OF';
var CELL_INSERT_INLINE_LEFT = exports.CELL_INSERT_INLINE_LEFT = 'CELL_INSERT_INLINE_LEFT';
var CELL_INSERT_INLINE_RIGHT = exports.CELL_INSERT_INLINE_RIGHT = 'CELL_INSERT_INLINE_RIGHT';

var gen = function gen() {
  var c = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

  var ret = [];
  for (var i = 0; i <= c; i++) {
    ret.push(_uuid2.default.v4());
  }
  return ret;
};

var insert = function insert(type) {
  return function (item, _ref) {
    var hover = _ref.id,
        inline = _ref.inline,
        hasInlineNeighbour = _ref.hasInlineNeighbour;
    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var ids = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

    var l = level;
    switch (type) {
      case CELL_INSERT_ABOVE:
      case CELL_INSERT_BELOW:
        {
          if ((inline || hasInlineNeighbour) && level < 1) {
            l = 1;
          }
          break;
        }

      case CELL_INSERT_LEFT_OF:
      case CELL_INSERT_RIGHT_OF:
        {
          if ((inline || hasInlineNeighbour) && level < 1) {
            l = 1;
          }
          break;
        }
      default:
    }

    return {
      type: type,
      ts: new Date(),
      item: item,
      hover: hover,
      level: l,
      ids: ids.length > 0 ? ids : gen(5)
    };
  };
};

/**
 * Insert a cell below of the hovering cell.
 */
var insertCellBelow = exports.insertCellBelow = insert(CELL_INSERT_BELOW);

/**
 * Insert a cell above of the hovering cell.
 */
var insertCellAbove = exports.insertCellAbove = insert(CELL_INSERT_ABOVE);

/**
 * Insert a cell right of the hovering cell.
 */
var insertCellRightOf = exports.insertCellRightOf = insert(CELL_INSERT_RIGHT_OF);

/**
 * Insert a cell left of the hovering cell.
 */
var insertCellLeftOf = exports.insertCellLeftOf = insert(CELL_INSERT_LEFT_OF);

/**
 * Insert a cell inside the hovering cell, on the left.
 */
var insertCellLeftInline = exports.insertCellLeftInline = insert(CELL_INSERT_INLINE_LEFT);

/**
 * Insert a cell inside the hovering cell, on the right.
 */
var insertCellRightInline = exports.insertCellRightInline = insert(CELL_INSERT_INLINE_RIGHT);
//# sourceMappingURL=insert.js.map