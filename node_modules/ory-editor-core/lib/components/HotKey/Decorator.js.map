{"version":3,"sources":["../../../src/components/HotKey/Decorator.js"],"names":["hotKeyHandler","n","key","Promise","resolve","nextLeaf","order","current","last","find","c","isLeaf","id","previousLeaf","reverse","falser","err","console","log","prototype","stopCallback","wasInitialized","Decorator","handlers","undo","props","redo","remove","e","focus","removeCell","isEditMode","searchNodeEverywhere","node","then","catch","focusNext","focusCell","blurAllCells","editable","found","cellOrder","focusPrev","bind","children","propTypes","isRequired","string","mapStateToProps","state","editables","mapDispatchToProps"],"mappings":";;;;;;;;AAEA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;AAXA;;;AAgCA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,CAAD,EAAYC,GAAZ;AAAA,SAA4B,sBAAO,sBAAO;AAAA,WAAMC,QAAQC,OAAR,EAAN;AAAA,GAAP,EAAgC,CAAC,SAAD,EAAY,QAAZ,EAAsBF,GAAtB,CAAhC,EAA4DD,CAA5D,CAAP,EAAuE,CAAC,QAAD,EAAW,QAAX,EAAqBC,GAArB,CAAvE,EAAkGD,CAAlG,CAA5B;AAAA,CAAtB;;AAEA,IAAMI,WAAW,SAAXA,QAAW,GAAqC;AAAA,MAApCC,KAAoC,uEAAxB,EAAwB;AAAA,MAApBC,OAAoB;;AACpD,MAAIC,aAAJ;;AAEA,SAAOF,MAAMG,IAAN,CAAW,UAACC,CAAD,EAAsC;AACtD,QAAIF,SAASD,OAAb,EAAsB;AACpB,aAAOG,EAAEC,MAAT;AACD;AACDH,WAAOE,EAAEE,EAAT;AACA,WAAO,KAAP;AACD,GANM,CAAP;AAOD,CAVD;;AAYA,IAAMC,eAAe,SAAfA,YAAe,CAACP,KAAD,EAAYC,OAAZ;AAAA,SAAgCF,SAAS,6BAAIC,KAAJ,GAAWQ,OAAX,EAAT,EAA+BP,OAA/B,CAAhC;AAAA,CAArB;;AAEA,IAAMQ,SAAS,SAATA,MAAS,CAACC,GAAD,EAAgB;AAC7B,MAAIA,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAYF,GAAZ;AACD;AACF,CAJD;;AAMA,yBAAe;AACb,sBAAUG,SAAV,CAAoBC,YAApB,GAAmC;AAAA,WAAM,KAAN;AAAA,GAAnC;AACD;;AAED,IAAIC,iBAAiB,KAArB;;IAEMC,S;;;;;;;;;;;;;;4LAmBJC,Q,GAAW;AACTC,YAAM,gBAAM;AAAA,0BACW,MAAKC,KADhB;AAAA,YACFb,EADE,eACFA,EADE;AAAA,YACEY,IADF,eACEA,IADF;;AAEVA,aAAKZ,EAAL;AACD,OAJQ;AAKTc,YAAM,gBAAM;AAAA,2BACW,MAAKD,KADhB;AAAA,YACFb,EADE,gBACFA,EADE;AAAA,YACEc,IADF,gBACEA,IADF;;AAEVA,aAAKd,EAAL;AACD,OARQ;;AAUT;AACAe,cAAQ,gBAACC,CAAD,EAAc;AAAA,2BACsB,MAAKH,KAD3B;AAAA,YACZI,KADY,gBACZA,KADY;AAAA,YACLC,UADK,gBACLA,UADK;AAAA,YACOC,UADP,gBACOA,UADP;;AAEpB,YAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAJmB,oCAMA,MAAKN,KAAL,CAAWO,oBAAX,CAAgCH,KAAhC,CANA;AAAA,YAMN5B,CANM,yBAMZgC,IANY;;AAOpBjC,sBAAcC,CAAd,EAAiB,oBAAjB,EAAuC2B,CAAvC,EAA0C3B,CAA1C,EACGiC,IADH,CACQ;AAAA,iBAAMJ,WAAWD,KAAX,CAAN;AAAA,SADR,EAEGM,KAFH,CAESpB,MAFT;AAGD,OArBQ;;AAuBT;AACAqB,iBAAW,mBAACR,CAAD,EAAc;AAAA,2BACgC,MAAKH,KADrC;AAAA,YACfI,KADe,gBACfA,KADe;AAAA,YACRQ,SADQ,gBACRA,SADQ;AAAA,YACGC,YADH,gBACGA,YADH;AAAA,YACiBP,UADjB,gBACiBA,UADjB;;AAEvB,YAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAJsB,qCAMO,MAAKN,KAAL,CAAWO,oBAAX,CAAgCH,KAAhC,CANP;AAAA,YAMT5B,CANS,0BAMfgC,IANe;AAAA,YAMNM,QANM,0BAMNA,QANM;;AAOvBvC,sBAAcC,CAAd,EAAiB,uBAAjB,EAA0C2B,CAA1C,EAA6C3B,CAA7C,EACGiC,IADH,CACQ,YAAM;AACV,cAAMM,QAAQnC,SAASkC,SAASE,SAAlB,EAA6BZ,KAA7B,CAAd;AACA,cAAIW,KAAJ,EAAW;AACTF;AACAD,sBAAUG,MAAM5B,EAAhB;AACD;AACF,SAPH,EAQGuB,KARH,CAQSpB,MART;AASD,OAxCQ;;AA0CT;AACA2B,iBAAW,mBAACd,CAAD,EAAc;AAAA,2BACgC,MAAKH,KADrC;AAAA,YACfI,KADe,gBACfA,KADe;AAAA,YACRQ,SADQ,gBACRA,SADQ;AAAA,YACGC,YADH,gBACGA,YADH;AAAA,YACiBP,UADjB,gBACiBA,UADjB;;AAEvB,YAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAJsB,qCAMO,MAAKN,KAAL,CAAWO,oBAAX,CAAgCH,KAAhC,CANP;AAAA,YAMT5B,CANS,0BAMfgC,IANe;AAAA,YAMNM,QANM,0BAMNA,QANM;;AAOvBvC,sBAAcC,CAAd,EAAiB,2BAAjB,EAA8C2B,CAA9C,EAAiD3B,CAAjD,EACGiC,IADH,CACQ,YAAM;AACV,cAAMM,QAAQ3B,aAAa0B,SAASE,SAAtB,EAAiCZ,KAAjC,CAAd;AACA,cAAIW,KAAJ,EAAW;AACTF;AACAD,sBAAUG,MAAM5B,EAAhB;AACD;AACF,SAPH,EAQGuB,KARH,CAQSpB,MART;AASD;AA3DQ,K;;;;;wCAjBS;AAClB,UAAI,CAACM,cAAL,EAAqB;AACnB,YAAI,oBAAJ,EAAgB;AACd;AACD;;AAED,4BAAUsB,IAAV,CAAe,CAAC,QAAD,EAAW,WAAX,CAAf,EAAwC,KAAKpB,QAAL,CAAcC,IAAtD;AACA,4BAAUmB,IAAV,CAAe,CAAC,cAAD,EAAiB,QAAjB,EAA2B,iBAA3B,EAA8C,WAA9C,CAAf,EAA2E,KAAKpB,QAAL,CAAcG,IAAzF;AACA,4BAAUiB,IAAV,CAAe,CAAC,KAAD,EAAQ,WAAR,CAAf,EAAqC,KAAKpB,QAAL,CAAcI,MAAnD;AACA,4BAAUgB,IAAV,CAAe,CAAC,MAAD,EAAS,OAAT,CAAf,EAAkC,KAAKpB,QAAL,CAAca,SAAhD;AACA,4BAAUO,IAAV,CAAe,CAAC,IAAD,EAAO,MAAP,CAAf,EAA+B,KAAKpB,QAAL,CAAcmB,SAA7C;AACArB,yBAAiB,IAAjB;AACD;AACF;;;6BAkEQ;AAAA,UACCuB,QADD,GACc,KAAKnB,KADnB,CACCmB,QADD;;AAEP,aAAOA,QAAP;AACD;;;;;;AAGHtB,UAAUuB,SAAV,GAAsB;AACpBD,YAAU,iBAAUX,IAAV,CAAea,UADL;AAEpBlC,MAAI,iBAAUmC,MAAV,CAAiBD;AAFD,CAAtB;;AAKA,IAAME,kBAAkB,wCAAyB;AAC/CjB,iCAD+C,EACnCF,mBADmC;AAE/CI,QAAM,cAACgB,KAAD;AAAA,WAAgB,UAACrC,EAAD,EAAa2B,QAAb;AAAA,aAAkC,qBAAKU,KAAL,EAAY,EAAErC,MAAF,EAAM2B,kBAAN,EAAZ,CAAlC;AAAA,KAAhB;AAAA,GAFyC;AAG/CP,wBAAsB,8BAACiB,KAAD;AAAA,WAAgB,UAACrC,EAAD;AAAA,aAAgB,qCAAqBqC,KAArB,EAA4BrC,EAA5B,CAAhB;AAAA,KAAhB;AAAA,GAHyB;AAI/C2B,YAAU,kBAACU,KAAD,EAAaxB,KAAb;AAAA,WAA4B,UAACb,EAAD;AAAA,aAAiB,yBAASqC,KAAT,EAAgBrC,KAAK,EAAEA,MAAF,EAAL,GAAca,KAA9B,CAAjB;AAAA,KAA5B;AAAA,GAJqC;AAK/CyB;AAL+C,CAAzB,CAAxB;;AAQA,IAAMC,qBAAqB;AACzB3B,kBADyB;AAEzBE,kBAFyB;AAGzBI,8BAHyB;AAIzBO,aAAW,mBAACzB,EAAD;AAAA,WAAgB,qBAAUA,EAAV,GAAhB;AAAA,GAJc;AAKzB0B;AALyB,CAA3B;;kBAQe,yBAAQU,eAAR,EAAyBG,kBAAzB,EAA6C7B,SAA7C,C","file":"Decorator.js","sourcesContent":["// @flow\n/* eslint-disable no-empty-function */\nimport { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport pathOr from 'ramda/src/pathOr'\nimport Mousetrap from 'mousetrap'\n\nimport { undo, redo } from '../../actions/undo'\nimport { removeCell, focusCell, blurAllCells } from '../../actions/cell'\nimport { isEditMode } from '../../selector/display'\nimport { focus } from '../../selector/focus'\nimport { node, editable, editables, searchNodeEverywhere } from '../../selector/editable'\n\nimport type { Editable, ComponentizedCell } from '../../types/editable'\n\ntype Props = {\n  children: any,\n  id: string,\n  undo(id: string): void,\n  redo(id: string): void,\n  removeCell(id: string): void,\n  focus: string,\n  focusCell(id: string): void,\n  blurAllCells(): void,\n  updateCellContent(): any,\n  updateCellLayout(): any,\n  isEditMode: boolean,\n  node(cell: string, editable: string): Object,\n  editable: Editable,\n  searchNodeEverywhere(id: string): { editable: Editable, node: ComponentizedCell }\n}\n\nconst hotKeyHandler = (n: Object, key: string) => pathOr(pathOr(() => Promise.resolve(), ['content', 'plugin', key], n), ['layout', 'plugin', key], n)\n\nconst nextLeaf = (order: [] = [], current: string) => {\n  let last\n\n  return order.find((c: {id: string, isLeaf: boolean}) => {\n    if (last === current) {\n      return c.isLeaf\n    }\n    last = c.id\n    return false\n  })\n}\n\nconst previousLeaf = (order: [], current: string) => nextLeaf([...order].reverse(), current)\n\nconst falser = (err: Error) => {\n  if (err) {\n    console.log(err)\n  }\n}\n\nif (Mousetrap) {\n  Mousetrap.prototype.stopCallback = () => false\n}\n\nlet wasInitialized = false\n\nclass Decorator extends Component {\n\n  componentDidMount() {\n    if (!wasInitialized) {\n      if (!Mousetrap) {\n        return\n      }\n\n      Mousetrap.bind(['ctrl+z', 'command+z'], this.handlers.undo)\n      Mousetrap.bind(['ctrl+shift+z', 'ctrl+y', 'command+shift+z', 'command+y'], this.handlers.redo)\n      Mousetrap.bind(['del', 'backspace'], this.handlers.remove)\n      Mousetrap.bind(['down', 'right'], this.handlers.focusNext)\n      Mousetrap.bind(['up', 'left'], this.handlers.focusPrev)\n      wasInitialized = true\n    }\n  }\n\n  props: Props\n\n  handlers = {\n    undo: () => {\n      const { id, undo } = this.props\n      undo(id)\n    },\n    redo: () => {\n      const { id, redo } = this.props\n      redo(id)\n    },\n\n    // remove cells\n    remove: (e: Event) => {\n      const { focus, removeCell, isEditMode } = this.props\n      if (!isEditMode) {\n        return\n      }\n\n      const { node: n } = this.props.searchNodeEverywhere(focus)\n      hotKeyHandler(n, 'handleRemoveHotKey')(e, n)\n        .then(() => removeCell(focus))\n        .catch(falser)\n    },\n\n    // focus next cell\n    focusNext: (e: Event) => {\n      const { focus, focusCell, blurAllCells, isEditMode } = this.props\n      if (!isEditMode) {\n        return\n      }\n\n      const { node: n, editable } = this.props.searchNodeEverywhere(focus)\n      hotKeyHandler(n, 'handleFocusNextHotKey')(e, n)\n        .then(() => {\n          const found = nextLeaf(editable.cellOrder, focus)\n          if (found) {\n            blurAllCells()\n            focusCell(found.id)\n          }\n        })\n        .catch(falser)\n    },\n\n    // focus previous cell\n    focusPrev: (e: Event) => {\n      const { focus, focusCell, blurAllCells, isEditMode } = this.props\n      if (!isEditMode) {\n        return\n      }\n\n      const { node: n, editable } = this.props.searchNodeEverywhere(focus)\n      hotKeyHandler(n, 'handleFocusPreviousHotKey')(e, n)\n        .then(() => {\n          const found = previousLeaf(editable.cellOrder, focus)\n          if (found) {\n            blurAllCells()\n            focusCell(found.id)\n          }\n        })\n        .catch(falser)\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    return children\n  }\n}\n\nDecorator.propTypes = {\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isEditMode, focus,\n  node: (state: any) => (id: string, editable: string) => node(state, { id, editable }),\n  searchNodeEverywhere: (state: any) => (id: string) => searchNodeEverywhere(state, id),\n  editable: (state: any, props: any) => (id?: string) => editable(state, id ? { id } : props),\n  editables\n})\n\nconst mapDispatchToProps = {\n  undo,\n  redo,\n  removeCell,\n  focusCell: (id: string) => focusCell(id)(),\n  blurAllCells\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Decorator)\n"]}