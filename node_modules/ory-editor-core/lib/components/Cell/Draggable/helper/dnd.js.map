{"version":3,"sources":["../../../../../src/components/Cell/Draggable/helper/dnd.js"],"names":["source","beginDrag","props","dragCell","id","children","node","rows","rawNode","endDrag","monitor","cancelCellDrag","didDrop","collect","connect","connectDragSource","dragSource","isDragging","connectDragPreview","dragPreview"],"mappings":";;;;;;;;AAGO,IAAMA,0BAAS;AACpBC,WADoB,qBACVC,KADU,EACgB;AAClC;AACAA,UAAMC,QAAN,CAAeD,MAAME,EAArB;AACA,wBACKF,KADL;AAEE;AACAG,gBAAU,IAHZ;AAIEC,yBACKJ,MAAMI,IADX;AAEEC,cAAML,MAAMM,OAAN,GAAgBD;AAFxB;AAJF;AASD,GAbmB;AAepBE,SAfoB,yBAe+BC,OAf/B,EAegD;AAAA,QAA1DC,cAA0D,QAA1DA,cAA0D;AAAA,QAA1CP,EAA0C,QAA1CA,EAA0C;;AAClE,QAAIM,QAAQE,OAAR,EAAJ,EAAuB;AACrB;AACA;AACD;;AAED;AACAD,mBAAeP,EAAf;AACD;AAvBmB,CAAf;AA0BA,IAAMS,4BAAU,SAAVA,OAAU,CAACC,OAAD,EAAkBJ,OAAlB;AAAA,SAAuC;AAC5DK,uBAAmBD,QAAQE,UAAR,EADyC;AAE5DC,gBAAYP,QAAQO,UAAR,EAFgD;AAG5DC,wBAAoBJ,QAAQK,WAAR;AAHwC,GAAvC;AAAA,CAAhB","file":"dnd.js","sourcesContent":["// @flow\nimport type { ComponentizedCell } from '../../../../types/editable'\n\nexport const source = {\n  beginDrag(props: ComponentizedCell) {\n    // Beginn dragging the cell\n    props.dragCell(props.id)\n    return {\n      ...props,\n      // we do not want to pass down the react children or we will risk circular dependencies.\n      children: null,\n      node: {\n        ...props.node,\n        rows: props.rawNode().rows\n      }\n    }\n  },\n\n  endDrag({ cancelCellDrag, id }: ComponentizedCell, monitor: Object) {\n    if (monitor.didDrop()) {\n      // If the item drop occurred deeper down the tree, don't do anything\n      return\n    }\n\n    // If drag ended but drop did not occur, cancel dragging\n    cancelCellDrag(id)\n  }\n}\n\nexport const collect = (connect: Object, monitor: Object) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n  connectDragPreview: connect.dragPreview()\n})\n"]}