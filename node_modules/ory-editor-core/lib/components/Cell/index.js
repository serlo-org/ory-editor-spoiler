'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _redux = require('redux');

var _reselect = require('reselect');

var _Inner = require('./Inner');

var _Inner2 = _interopRequireDefault(_Inner);

var _shouldComponentUpdate = require('../../helper/shouldComponentUpdate');

var _editable = require('../../selector/editable');

var _display = require('../../selector/display');

var _cell = require('../../actions/cell');

var _Resizable = require('./Resizable');

var _Resizable2 = _interopRequireDefault(_Resizable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var gridClass = function gridClass(_ref) {
  var size = _ref.node.size,
      isPreviewMode = _ref.isPreviewMode,
      isEditMode = _ref.isEditMode;

  if (isPreviewMode || isEditMode) {
    return 'ory-cell-' + (isPreviewMode || isEditMode ? 'md' : 'xs') + '-' + (size || 12) + ' ory-cell-xs-12';
  }

  return 'ory-cell-xs-' + (size || 12);
};

var stopClick = function stopClick(isEditMode) {
  return function (e) {
    return isEditMode ? e.stopPropagation() : null;
  };
};

var Cell = function (_Component) {
  _inherits(Cell, _Component);

  function Cell() {
    var _ref2;

    var _temp, _this, _ret;

    _classCallCheck(this, Cell);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Cell.__proto__ || Object.getPrototypeOf(Cell)).call.apply(_ref2, [this].concat(args))), _this), _this.shouldComponentUpdate = _shouldComponentUpdate.shouldPureComponentUpdate, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Cell, [{
    key: 'render',
    value: function render() {
      var _classNames;

      var _props = this.props,
          id = _props.id,
          rowWidth = _props.rowWidth,
          rowHeight = _props.rowHeight,
          updateDimensions = _props.updateDimensions,
          isResizeMode = _props.isResizeMode,
          isEditMode = _props.isEditMode,
          _props$node = _props.node,
          inline = _props$node.inline,
          resizable = _props$node.resizable,
          hasInlineNeighbour = _props$node.hasInlineNeighbour,
          focused = _props$node.focused;


      var props = _extends({}, this.props, { styles: null });
      return _react2.default.createElement(
        'div',
        {
          className: (0, _classnames2.default)('ory-cell', gridClass(this.props), (_classNames = {
            'ory-cell-has-inline-neighbour': hasInlineNeighbour
          }, _defineProperty(_classNames, 'ory-cell-inline-' + (inline || ''), inline), _defineProperty(_classNames, 'ory-cell-focused', focused), _defineProperty(_classNames, 'ory-cell-resizing-overlay', isResizeMode), _classNames)),
          onClick: stopClick(isEditMode)
        },
        resizable && isResizeMode ? _react2.default.createElement(
          _Resizable2.default,
          {
            id: id,
            rowWidth: rowWidth,
            rowHeight: rowHeight,
            updateDimensions: updateDimensions,
            node: props.node,
            steps: 12,
            onChange: props.resizeCell
          },
          _react2.default.createElement(_Inner2.default, props)
        ) : _react2.default.createElement(_Inner2.default, props)
      );
    }
  }]);

  return Cell;
}(_react.Component);

var mapStateToProps = (0, _reselect.createStructuredSelector)({
  isPreviewMode: _display.isPreviewMode,
  isEditMode: _display.isEditMode,
  isResizeMode: _display.isResizeMode,
  // required by sub-components
  isInsertMode: _display.isInsertMode,
  isLayoutMode: _display.isLayoutMode,
  config: _editable.editableConfig,
  node: _editable.purifiedNode,
  rawNode: function rawNode(state, props) {
    return function () {
      return (0, _editable.node)(state, props);
    };
  }
});

var mapDispatchToProps = function mapDispatchToProps(dispatch, _ref3) {
  var id = _ref3.id;
  return (0, _redux.bindActionCreators)({
    resizeCell: (0, _cell.resizeCell)(id),
    focusCell: (0, _cell.focusCell)(id),
    blurAllCells: _cell.blurAllCells
  }, dispatch);
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Cell);
//# sourceMappingURL=index.js.map