'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactResizable = require('react-resizable');

var _reactRedux = require('react-redux');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reselect = require('reselect');

var _display = require('../../../actions/display');

var _helper = require('./helper.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Resizable = function (_Component) {
  _inherits(Resizable, _Component);

  function Resizable(props) {
    _classCallCheck(this, Resizable);

    var _this = _possibleConstructorReturn(this, (Resizable.__proto__ || Object.getPrototypeOf(Resizable)).call(this, props));

    _this.state = {
      stepWidth: Number,
      width: Number,
      steps: Number
    };

    _this.onResize = function (event, _ref) {
      var size = _ref.size;

      var newSize = (0, _helper.widthToSize)(_this.state, _this.props, size);
      _this.props.onChange(newSize);
      _this.setState({ width: newSize * _this.state.stepWidth });
    };

    var sw = (0, _helper.computeStepWidth)(props);
    _this.state = {
      stepWidth: sw,
      width: props.node.size * sw,
      steps: props.steps - 1 || 11
    };
    return _this;
  }

  _createClass(Resizable, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          _props$node = _props.node,
          bounds = _props$node.bounds,
          inline = _props$node.inline,
          children = _props.children;


      return _react2.default.createElement(
        _reactResizable.Resizable,
        {
          className: (0, _classnames2.default)('ory-cell-inner', 'ory-cell-resizable', _defineProperty({}, 'ory-cell-resizable-inline-' + (inline || ''), inline)),
          onResize: this.onResize,
          minConstraints: inline ? null : [this.state.stepWidth, Infinity],
          maxConstraints: inline ? null : [bounds.right * this.state.stepWidth, Infinity],
          draggableOpts: { grid: [this.state.stepWidth, 0], axis: 'none', offsetParent: document.body },
          width: this.state.width,
          height: 0
        },
        _react2.default.createElement(
          'div',
          null,
          children
        )
      );
    }
  }]);

  return Resizable;
}(_react.Component);

var mapStateToProps = (0, _reselect.createStructuredSelector)({});

var mapDispatchToProps = { resizeMode: _display.resizeMode, editMode: _display.editMode };

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Resizable);
//# sourceMappingURL=index.js.map