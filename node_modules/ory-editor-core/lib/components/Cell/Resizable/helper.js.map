{"version":3,"sources":["../../../../src/components/Cell/Resizable/helper.js"],"names":["computeStepWidth","rowWidth","steps","Math","round","widthToSize","result","stepWidth","inline","node","size","width"],"mappings":";;;;;AAGO,IAAMA,8CAAmB,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,KAAb,QAAaA,KAAb;AAAA,SAAsEC,KAAKC,KAAL,CAAWH,YAAYC,SAAS,EAArB,CAAX,CAAtE;AAAA,CAAzB;AAEA,IAAMG,oCAAc,SAAdA,WAAc,eAAsGC,MAAtG,EAA4I;AAAA,MAAzIC,SAAyI,SAAzIA,SAAyI;AAAA,MAA9HL,KAA8H,SAA9HA,KAA8H;AAAA,MAArEM,MAAqE,SAA7EC,IAA6E,CAArED,MAAqE;;AACrK,MAAIE,OAAOP,KAAKC,KAAL,CAAWE,OAAOK,KAAP,GAAeJ,SAA1B,CAAX;AACA,MAAIC,WAAW,OAAf,EAAwB;AACtBE,WAAOR,QAAQQ,IAAf;AACD;;AAED,MAAIA,OAAOR,KAAX,EAAkB;AAChBQ,WAAOR,KAAP;AACD,GAFD,MAEO,IAAIQ,OAAO,CAAX,EAAc;AACnBA,WAAO,CAAP;AACD;;AAED,SAAOA,IAAP;AACD,CAbM","file":"helper.js","sourcesContent":["// @flow\nimport type { ComponentizedCell } from 'types/editable'\n\nexport const computeStepWidth = ({ rowWidth, steps }: { rowWidth: number, steps: number }): number => Math.round(rowWidth / (steps || 12))\n\nexport const widthToSize = ({ stepWidth, steps }: { stepWidth: number, steps: number }, { node: { inline } }: ComponentizedCell, result: { width: number }): number => {\n  let size = Math.round(result.width / stepWidth)\n  if (inline === 'right') {\n    size = steps - size\n  }\n\n  if (size > steps) {\n    size = steps\n  } else if (size < 1) {\n    size = 1\n  }\n\n  return size\n}\n"]}