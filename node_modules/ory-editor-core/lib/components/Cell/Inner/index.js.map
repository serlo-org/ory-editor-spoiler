{"version":3,"sources":["../../../../src/components/Cell/Inner/index.js"],"names":["Inner","shouldComponentUpdate","props","node","rows","layout","plugin","LayoutComponent","Component","layoutType","name","state","layoutState","content","ContentComponent","contentType","config","whitelist","length"],"mappings":";;;;;;;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAIMA,K;;;;;;;;;;;;;;oLACJC,qB;;;;;6BAGS;AACP,UAAMC,QAAQ,KAAKA,KAAnB;AADO,mBASH,KAAKA,KATF;AAAA,+BAGLC,IAHK;AAAA,yCAIHC,IAJG;AAAA,UAIHA,IAJG,oCAII,EAJJ;AAAA,2CAKHC,MALG;AAAA,8DAKkG,EALlG;AAAA,qDAKOC,MALP;AAAA,oEAKkE,EALlE;AAAA,UAK4BC,eAL5B,yBAKiBC,SALjB;AAAA,UAKmDC,UALnD,yBAK6CC,IAL7C;AAAA,qDAKsEC,KALtE;AAAA,UAK6EC,WAL7E,yCAK2F,EAL3F;AAAA,4CAMHC,OANG;AAAA,gEAM4E,EAN5E;AAAA,sDAMQP,MANR;AAAA,oEAMqE,EANrE;AAAA,UAM6BQ,gBAN7B,yBAMkBN,SANlB;AAAA,UAMqDO,WANrD,yBAM+CL,IAN/C;AAAA,yCAQLM,MARK,CAQKC,SARL;AAAA,UAQKA,SARL,yCAQiB,EARjB;AAUP;;AAEA,UAAIb,KAAKc,MAAL,IAAeX,eAAnB,EAAoC;AAClC,eACE;AAAA;AAAA,uBAAeL,KAAf,IAAsB,WAAWe,SAAjC;AACE;AAAA;AAAA,yBAAef,KAAf,IAAsB,UAAUO,UAAhC;AACE,yEAAYP,KAAZ,EAAuBU,WAAvB;AADF;AADF,SADF;AAOD,OARD,MAQO,IAAIR,KAAKc,MAAT,EAAiB;AACtB,eACE;AAAA;AAAA,uBAAehB,KAAf,IAAsB,WAAWe,SAAjC;AACE,wDAAUf,KAAV;AADF,SADF;AAKD,OANM,MAMA,IAAIY,gBAAJ,EAAsB;AAC3B,eACE;AAAA;AAAA,uBAAeZ,KAAf,IAAsB,YAAtB,EAA6B,WAAWe,SAAxC;AACE;AAAA;AAAA,yBAAef,KAAf,IAAsB,YAAtB,EAA6B,UAAUa,WAAvC;AACE,6DAAab,KAAb;AADF;AADF,SADF;AAOD;;AAED,aACE,+CAAWA,KAAX,CADF;AAGD;;;;;;kBAGYF,K","file":"index.js","sourcesContent":["// @flow\nimport React, { Component } from 'react'\n\nimport { shouldPureComponentUpdate } from '../../../helper/shouldComponentUpdate'\nimport Droppable from '../Droppable'\nimport Draggable from '../Draggable'\nimport Rows from '../Rows'\nimport Layout from '../Layout'\nimport Content from '../Content'\nimport Empty from '../Empty'\n\nimport type { ComponentizedCell } from '../../../types/editable'\n\nclass Inner extends Component {\n  shouldComponentUpdate = shouldPureComponentUpdate\n  props: ComponentizedCell\n\n  render() {\n    const props = this.props\n    const {\n      node: {\n        rows = [],\n        layout: { plugin: { Component: LayoutComponent, name: layoutType } = {}, state: layoutState = {} } = {},\n        content: { plugin: { Component: ContentComponent, name: contentType } = {} } = {},\n      },\n      config: { whitelist = [] }\n    } = this.props\n    // const className = 'ory-cell-inner'\n\n    if (rows.length && LayoutComponent) {\n      return (\n        <Droppable {...props} dropTypes={whitelist}>\n          <Draggable {...props} dragType={layoutType}>\n            <Layout {...props} {...layoutState} />\n          </Draggable>\n        </Droppable>\n      )\n    } else if (rows.length) {\n      return (\n        <Droppable {...props} dropTypes={whitelist}>\n          <Rows {...props} />\n        </Droppable>\n      )\n    } else if (ContentComponent) {\n      return (\n        <Droppable {...props} isLeaf dropTypes={whitelist}>\n          <Draggable {...props} isLeaf dragType={contentType}>\n            <Content {...props} />\n          </Draggable>\n        </Droppable>\n      )\n    }\n\n    return (\n      <Empty {...props} />\n    )\n  }\n}\n\nexport default Inner\n"]}