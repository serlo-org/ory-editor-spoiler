{"version":3,"sources":["../../../src/components/Dimensions/index.js"],"names":["defaultGetWidth","element","clientWidth","defaultGetHeight","clientHeight","Dimensions","getHeight","getWidth","className","elementResize","ComposedComponent","Decorator","state","updateDimensions","container","containerRef","containerWidth","containerHeight","setState","onResize","rqf","getWindow","requestAnimationFrame","onContainerRef","ref","Error","addEventListener","removeEventListener","ownerDocument","defaultView","window","props"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,OAAD;AAAA,SAAaA,QAAQC,WAArB;AAAA,CAAxB;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACF,OAAD;AAAA,SAAaA,QAAQG,YAArB;AAAA,CAAzB;;AAEA,IAAMC,aAAa,SAAbA,UAAa;AAAA,iFAKf,EALe;AAAA,4BACjBC,SADiB;AAAA,MACjBA,SADiB,kCACLH,gBADK;AAAA,2BAEjBI,QAFiB;AAAA,MAEjBA,QAFiB,iCAENP,eAFM;AAAA,4BAGjBQ,SAHiB;AAAA,MAGjBA,SAHiB,kCAGL,IAHK;AAAA,gCAIjBC,aAJiB;AAAA,MAIjBA,aAJiB,sCAID,KAJC;;AAAA,SAKR,UAACC,iBAAD,EAAuB;AAAA,QAC1BC,SAD0B;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,kMAE9BC,KAF8B,GAEtB,EAFsB,QAwB9BC,gBAxB8B,GAwBX,YAAM;AACvB,cAAMC,YAAY,MAAKC,YAAvB;AACA,cAAMC,iBAAiBT,SAASO,SAAT,CAAvB;AACA,cAAMG,kBAAkBX,UAAUQ,SAAV,CAAxB;;AAEA,cAAIE,mBAAmB,MAAKJ,KAAL,CAAWI,cAA9B,IAAgDC,oBAAoB,MAAKL,KAAL,CAAWK,eAAnF,EAAoG;AAClG,kBAAKC,QAAL,CAAc,EAAEF,8BAAF,EAAkBC,gCAAlB,EAAd;AACD;AACF,SAhC6B,QAkC9BE,QAlC8B,GAkCnB,YAAM;AACf,cAAI,MAAKC,GAAT,EAAc;AACZ;AACD;;AAED,gBAAKA,GAAL,GAAW,MAAKC,SAAL,GAAiBC,qBAAjB,CAAuC,YAAM;AACtD,kBAAKF,GAAL,GAAW,IAAX;AACA,kBAAKP,gBAAL;AACD,WAHU,CAAX;AAID,SA3C6B,QAsD9BU,cAtD8B,GAsDb,UAACC,GAAD,EAAS;AACxB,gBAAKT,YAAL,GAAoBS,GAApB;AACD,SAxD6B;AAAA;;AAAA;AAAA;AAAA,4CAIV;AAClB,cAAI,CAAC,KAAKT,YAAV,EAAwB;AACtB,kBAAM,IAAIU,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,eAAKZ,gBAAL;AACA,cAAIJ,aAAJ,EAAmB;AACjB;AACA;AACA;AACA,8CAAgB,KAAKM,YAArB,EAAmC,KAAKF,gBAAxC;AACD,WALD,MAKO;AACL,iBAAKQ,SAAL,GAAiBK,gBAAjB,CAAkC,QAAlC,EAA4C,KAAKP,QAAjD,EAA2D,KAA3D;AACD;AACF;AAlB6B;AAAA;AAAA,+CAoBP;AACrB,eAAKE,SAAL,GAAiBM,mBAAjB,CAAqC,QAArC,EAA+C,KAAKR,QAApD;AACD;AAtB6B;AAAA;;;AA6C9B;AACA;AACA;AACA;AACA;AAjD8B,oCAkDlB;AACV,iBAAO,KAAKJ,YAAL,GAAqB,KAAKA,YAAL,CAAkBa,aAAlB,CAAgCC,WAAhC,IAA+CC,MAApE,GAA8EA,MAArF;AACD;AApD6B;AAAA;AAAA,iCA0DrB;AACP,iBACE;AAAA;AAAA,cAAK,WAAW,0BAAWtB,SAAX,EAAsB,gBAAtB,CAAhB,EAAyD,KAAK,KAAKe,cAAnE;AACE,0CAAC,iBAAD,eACM,KAAKX,KADX,EAEM,KAAKmB,KAFX;AAGE,gCAAkB,KAAKlB;AAHzB;AADF,WADF;AASD;AApE6B;;AAAA;AAAA;;AAuEhC,WAAOF,SAAP;AACD,GA7EkB;AAAA,CAAnB;;kBA+EeN,U","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport onElementResize from 'element-resize-event'\nimport classNames from 'classnames'\n\nconst defaultGetWidth = (element) => element.clientWidth\nconst defaultGetHeight = (element) => element.clientHeight\n\nconst Dimensions = ({\n  getHeight = defaultGetHeight,\n  getWidth = defaultGetWidth,\n  className = null,\n  elementResize = false\n} = {}) => (ComposedComponent) => {\n  class Decorator extends Component {\n    state = {}\n\n    componentDidMount() {\n      if (!this.containerRef) {\n        throw new Error('Cannot find container div')\n      }\n\n      this.updateDimensions()\n      if (elementResize) {\n        // Experimental: `element-resize-event` fires when an element resizes.\n        // It attaches its own window resize listener and also uses\n        // requestAnimationFrame, so we can just call `this.updateDimensions`.\n        onElementResize(this.containerRef, this.updateDimensions)\n      } else {\n        this.getWindow().addEventListener('resize', this.onResize, false)\n      }\n    }\n\n    componentWillUnmount() {\n      this.getWindow().removeEventListener('resize', this.onResize)\n    }\n\n    updateDimensions = () => {\n      const container = this.containerRef\n      const containerWidth = getWidth(container)\n      const containerHeight = getHeight(container)\n\n      if (containerWidth !== this.state.containerWidth || containerHeight !== this.state.containerHeight) {\n        this.setState({ containerWidth, containerHeight })\n      }\n    }\n\n    onResize = () => {\n      if (this.rqf) {\n        return\n      }\n\n      this.rqf = this.getWindow().requestAnimationFrame(() => {\n        this.rqf = null\n        this.updateDimensions()\n      })\n    }\n\n    // If the component is mounted in a different window to the javascript\n    // context, as with https://github.com/JakeGinnivan/react-popout\n    // then the `window` global will be different from the `window` that\n    // contains the component.\n    // Depends on `defaultView` which is not supported <IE9\n    getWindow() {\n      return this.containerRef ? (this.containerRef.ownerDocument.defaultView || window) : window\n    }\n\n    onContainerRef = (ref) => {\n      this.containerRef = ref\n    }\n\n    render() {\n      return (\n        <div className={classNames(className, 'ory-dimensions')} ref={this.onContainerRef}>\n          <ComposedComponent\n            {...this.state}\n            {...this.props}\n            updateDimensions={this.updateDimensions}\n          />\n        </div>\n      )\n    }\n  }\n\n  return Decorator\n}\n\nexport default Dimensions\n"]}