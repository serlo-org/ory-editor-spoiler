{"version":3,"sources":["../../../../src/components/Editable/Inner/index.js"],"names":["Inner","shouldComponentUpdate","createFallbackCell","props","node","cells","defaultPlugin","id","length","blurAllCells","containerWidth","containerHeight","map","c","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;;;AACA;;;;AACA;;AACA;;AAEA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;;;IAIMA,K;;;;;;;;;;;;;;oLAMJC,qB,2DAUAC,kB,GAAqB,YAAM;AAAA,wBAC+C,MAAKC,KADpD;AAAA,8CACjBC,IADiB,CACTC,KADS;AAAA,UACTA,KADS,yCACD,EADC;AAAA,UACKH,kBADL,eACKA,kBADL;AAAA,UACyBI,aADzB,eACyBA,aADzB;AAAA,UACwCC,EADxC,eACwCA,EADxC;;AAEzB,UAAIF,MAAMG,MAAN,KAAiB,CAArB,EAAwB;AACtBN,2BAAmB,2BAAkBI,aAAlB,CAAnB,EAAqDC,EAArD;AACD;AACF,K;;;;;wCApBmB;AAClB,sCAAqB,KAAKJ,KAAL,CAAWM,YAAhC;AACA,WAAKP,kBAAL;AACD;;;yCAIoB;AACnB,WAAKA,kBAAL;AACD;;;2CAEsB;AACrB,uCAAsB,KAAKC,KAAL,CAAWM,YAAjC;AACD;;;6BAWQ;AAAA,mBAC+C,KAAKN,KADpD;AAAA,UACCI,EADD,UACCA,EADD;AAAA,UACKG,cADL,UACKA,cADL;AAAA,UACqBC,eADrB,UACqBA,eADrB;AAAA,UACsCP,IADtC,UACsCA,IADtC;;AAEP,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AAJM,wBAMgBA,IANhB,CAMCC,KAND;AAAA,UAMCA,KAND,+BAMS,EANT;;AAOP,aACE;AAAA;AAAA,UAAK,WAAU,+BAAf;AACGA,cAAMO,GAAN,CAAU,UAACC,CAAD;AAAA,iBACT;AACE,sBAAUH,cADZ;AAEE,uBAAWC,eAFb;AAGE,sBAAUJ,EAHZ;AAIE,uBAAW,EAJb;AAKE,iBAAKM,CALP;AAME,gBAAIA;AANN,YADS;AAAA,SAAV;AADH,OADF;AAcD;;;;;;AAGH,IAAMC,kBAAkB,wCAAyB,EAAEV,gCAAF,EAAzB,CAAxB;;AAEA,IAAMW,qBAAqB,EAAEN,gCAAF,EAAgBP,4CAAhB,EAA3B;;kBAEe,4BAAa,yBAAQY,eAAR,EAAyBC,kBAAzB,EAA6Cf,KAA7C,CAAb,C","file":"index.js","sourcesContent":["// @flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { ContentPlugin } from '../../../service/plugin/classes'\nimport Cell from '../../Cell'\nimport { shouldPureComponentUpdate } from '../../../helper/shouldComponentUpdate'\nimport { purifiedEditable } from '../../../selector/editable'\nimport dimensions from '../../Dimensions'\nimport { blurAllCells, createFallbackCell } from '../../../actions/cell'\nimport { enableGlobalBlurring, disableGlobalBlurring } from './blur'\n\nimport type { EditableComponentState, Cell as CellType } from '../../../types/editable'\n\nclass Inner extends Component {\n  componentDidMount() {\n    enableGlobalBlurring(this.props.blurAllCells)\n    this.createFallbackCell()\n  }\n\n  shouldComponentUpdate = shouldPureComponentUpdate\n\n  componentDidUpdate() {\n    this.createFallbackCell()\n  }\n\n  componentWillUnmount() {\n    disableGlobalBlurring(this.props.blurAllCells)\n  }\n\n  createFallbackCell = () => {\n    const { node: { cells = [] }, createFallbackCell, defaultPlugin, id } = this.props\n    if (cells.length === 0) {\n      createFallbackCell(new ContentPlugin(defaultPlugin), id)\n    }\n  }\n\n  props: EditableComponentState\n\n  render() {\n    const { id, containerWidth, containerHeight, node } = this.props\n    if (!node) {\n      return null\n    }\n\n    const { cells = [] } = node\n    return (\n      <div className=\"ory-editable ory-prevent-blur\">\n        {cells.map((c: string | CellType) => (\n          <Cell\n            rowWidth={containerWidth}\n            rowHeight={containerHeight}\n            editable={id}\n            ancestors={[]}\n            key={c}\n            id={c}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({ node: purifiedEditable })\n\nconst mapDispatchToProps = { blurAllCells, createFallbackCell }\n\nexport default dimensions()(connect(mapStateToProps, mapDispatchToProps)(Inner))\n"]}