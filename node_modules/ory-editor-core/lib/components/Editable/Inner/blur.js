'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var instantiated = 0;

// We need to stop some events from bubbling up, so we go up the tree from
// the event source and check if one of the parents is the root editor node.
// If not, we blur all cells because the editor lost focus.
var blurAll = function blurAll(blurAllCells) {
  return function (e) {
    var c = e.target;
    if (c instanceof HTMLElement) {
      if (c.classList.contains('ory-prevent-blur')) {
        return;
      }

      /* eslint no-cond-assign: ["off"] */
      while (c = c.parentElement) {
        if (c.classList.contains('ory-prevent-blur')) {
          return;
        }
      }
      blurAllCells();
    }
  };
};

var enableGlobalBlurring = exports.enableGlobalBlurring = function enableGlobalBlurring(blurAllCells) {
  if (instantiated === 0 && document && document.body) {
    document.body.addEventListener('mousedown', blurAll(blurAllCells));
    instantiated = 1;
    return blurAll(blurAllCells);
  }

  if (instantiated > 0) {
    instantiated += 1;
  }
};

var disableGlobalBlurring = exports.disableGlobalBlurring = function disableGlobalBlurring(blurAllCells) {
  if (!instantiated === 1 && document && document.body) {
    document.body.removeEventListener('mousedown', blurAll(blurAllCells));
    instantiated = 0;
    return blurAll(blurAllCells);
  }

  if (instantiated > 0) {
    instantiated -= 1;
  }
};
//# sourceMappingURL=blur.js.map